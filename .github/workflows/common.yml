name: Common Workflow ‚öôÔ∏è
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/common.yml"
      - "modules/**"

jobs:
  composer-setup:
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        php-version: [ '8.1' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ‚§µÔ∏è Checkout Sources
        uses: actions/checkout@v2
      - name: üêò Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
      - name: ‚úîÔ∏è Validate composer.lock
        run: composer validate --strict --no-interaction
      - name: üíæ Cache dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: üì¶ Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts

  static-analysis:
    name: üîé Static Analysis
    needs: [ composer-setup ]
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        php-version: [ '8.1' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ‚§µÔ∏è Checkout Sources
        uses: actions/checkout@v2
      - name: üêò Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
      - name: üíæ Cache dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: üîé Run Psalm
        run: vendor/bin/psalm --shepherd

  unit-tests:
    name: üß™ Unit Tests
    needs: [ composer-setup ]
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        php-version: [ '8.1' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ‚§µÔ∏è Checkout Sources
        uses: actions/checkout@v2
      - name: üêò Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
      - name: üíæ Cache dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: üß™ Run PHPUnit
        run: vendor/bin/phpunit --configuration phpunit.xml.dist --colors --verbose

  mutation-tests:
    name: üßü Mutation Tests
    needs: [ unit-tests ]
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        php-version: [ '8.1' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ‚§µÔ∏è Checkout Sources
        uses: actions/checkout@v2
      - name: üêò Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          ini-values: xdebug.mode=coverage
      - name: ‚úîÔ∏è Validate composer.lock
        run: composer validate --strict --no-interaction
      - name: üíæ Cache dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: üì¶ Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts
      - name: üßü Run Infection
        run: vendor/bin/infection --threads=$(nproc) --min-covered-msi=90 --logger-github --no-interaction --no-progress

  coverage:
    name: üìä Coverage
    needs: [ unit-tests ]
    runs-on: 'ubuntu-latest'
    steps:
      - name: ‚§µÔ∏è Checkout Sources
        uses: actions/checkout@v2
      - name: üêò Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug
          ini-values: xdebug.mode=coverage
      - name: üíæ Cache dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-8.1-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-8.1-composer-
      - name: üîë Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY_COVERAGE }}
          known_hosts: unnecessary
      - name: ‚§µÔ∏è Checkout coverage repository
        run: |
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts && \
          git clone git@github.com:philly-framework/coverage.git tmp/coverage/html --depth=1 && \
          cd tmp/coverage/html && \
          find . -maxdepth 1 ! -name .git ! -name .nojekyll ! -name . -exec rm -rv {} \;
      - name: üìä Run PHPUnit Coverage
        run: vendor/bin/phpunit --configuration phpunit.xml.dist --coverage-html tmp/coverage/html
      - name: ‚§¥Ô∏è Push updated coverage report
        uses: EndBug/add-and-commit@v7
        with:
          cwd: './tmp/coverage/html'
          message: ${{ format('{0} ({1}@{2})', github.event.commits[0].message, 'philly-framework/base', github.sha) }}
          pull: NO-PULL

