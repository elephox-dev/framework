name: CI
on:
  push:
    paths:
      - '.github/workflows/ci.yml'
      - 'modules/**'
      - 'composer.json'
      - 'composer.lock'
      - 'infection.json'
      - 'phpunit.xml.dist'
      - 'psalm.xml'

env:
  php-extensions: mysqli,mbstring,json

jobs:
  composer-setup:
    name: 📦 Composer Setup
    strategy:
      matrix:
        php-version: [ '8.1', '8.2' ]
        os: [ 'ubuntu-latest', 'windows-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.php-extensions }}
      - name: ✔️ Validate composer.lock
        run: composer validate --strict --no-interaction
      - name: 📦 Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts --ignore-platform-req=php+
      - name: ↔️ Check module requirements
        run: composer ci:check-dependencies
      - name: 🧐 Check composer.json format
        run: composer ci:normalize-composer

  static-analysis:
    name: 🔎 Static Analysis
    needs: [ composer-setup ]
    strategy:
      matrix:
        php-version: [ '8.1', '8.2' ]
        os: [ 'ubuntu-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.php-extensions }}
      - name: 📦 Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts --ignore-platform-req=php+
      - name: 🔎 Run Psalm
        if: ${{ matrix.os != 'ubuntu-latest' || matrix.php-version != '8.1' }}
        run: composer run ci:static-analysis
      - name: 🔎 Run Psalm & publish
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.php-version == '8.1' }}
        run: composer run ci:static-analysis:publish

#  benchmark:
#    name: 👟 Benchmark
#    needs: [ composer-setup ]
#    strategy:
#      matrix:
#        php-version: [ '8.1', '8.2' ]
#        os: [ 'ubuntu-latest', 'windows-latest' ]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: ⤵️ Checkout Sources
#        uses: actions/checkout@v2
#      - name: 🐘 Setup PHP ${{ matrix.php-version }}
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php-version }}
#          extensions: ${{ env.php-extensions }}
#          coverage: none
#      - name: 📦 Get composer cache directory
#        id: composer-cache
#        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#      - name: 💾 Cache dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-
#      - name: 📦 Install dependencies
#        run: composer install --no-interaction --no-progress --no-scripts --ignore-platform-req=php+
#      - name: 👟 Run PHPBench
#        run: composer run ci:benchmark

  unit-tests:
    name: 🧪 Unit Tests
    needs: [ composer-setup ]
    strategy:
      matrix:
        php-version: [ '8.1', '8.2' ]
        os: [ 'ubuntu-latest', 'windows-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.php-extensions }}
          coverage: xdebug
      - name: 📦 Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts --ignore-platform-req=php+
      - name: 🧪 Run PHPUnit
        run: composer run ci:unit-test
      - name: 📤 Upload coverage data
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-${{ matrix.php-version }}-coverage
          path: build/coverage/
          retention-days: 30

  mutation-tests:
    name: 🧟 Mutation Tests
    needs: [ unit-tests ]
    strategy:
      matrix:
        php-version: [ '8.1', '8.2' ]
        os: [ 'ubuntu-latest', 'windows-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.php-extensions }}
          coverage: xdebug
      - name: 📦 Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts --ignore-platform-req=php+
      - name: 📥 Download coverage data
        uses: actions/download-artifact@v2
        with:
          name: ${{ runner.os }}-${{ matrix.php-version }}-coverage
          path: build/coverage/
      - name: 🧟 Run Infection
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: composer run ci:mutation-test
      - name: 🧟 Run Infection (auto scale)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: composer run ci:mutation-test:autoscale

  memory-leak-tests:
    name: 💉 Memory Leak Tests
    needs: [ unit-tests ]
    strategy:
      matrix:
        php-version: [ '8.1', '8.2' ]
        os: [ 'ubuntu-latest', 'windows-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.php-extensions }}
          coverage: xdebug
      - name: 📦 Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts --ignore-platform-req=php+
      - name: 💉 Run Memory Leak Tests
        run: composer run ci:memory-leak-test

  coverage:
    name: 📊 Publish Coverage
    needs: [ unit-tests ]
    runs-on: 'ubuntu-latest'
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: ${{ env.php-extensions }}
          tools: php-coveralls/php-coveralls:^2.5.2
        env:
          fail-fast: true
      - name: 📥 Download coverage data
        uses: actions/download-artifact@v2
        with:
          name: ${{ runner.os }}-8.1-coverage
          path: build/coverage/
      - name: 📊 Publish coverage data to coveralls.io
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: composer run ci:publish-coverage
