name: CI
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/ci.yml'
      - 'modules/**'
      - 'composer.json'
      - 'composer.lock'
      - 'infection.json'
      - 'phpunit.xml.dist'
      - 'psalm.xml'

jobs:
  composer-setup:
    name: 📦 Composer Setup
    runs-on: 'ubuntu-latest'
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: elephox/composer-module-sync
      - name: ✔️ Validate composer.lock
        run: composer validate --strict --no-interaction
      - name: ↔️ Check module requirements
        run: composer modules:check -vvv
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-8.1-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-8.1-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts

  static-analysis:
    name: 🔎 Static Analysis
    needs: [ composer-setup ]
    runs-on: 'ubuntu-latest'
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-8.1-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-8.1-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts
      - name: 🔎 Run Psalm
        run: vendor/bin/psalm --shepherd

  benchmark:
    name: 👟 Benchmark
    needs: [ composer-setup ]
    runs-on: 'ubuntu-latest'
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-8.1-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-8.1-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts
      - name: 👟 Run PHPBench
        run: vendor/bin/phpbench --store --tag=${{ github.sha }} --report=overview --retry-threshold=5 --output=html
      - name: 📤 Upload coverage data
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-8.1-benchmark
          path: build/benchmark/
          retention-days: 30

  unit-tests:
    name: 🧪 Unit Tests
    needs: [ composer-setup ]
    runs-on: 'ubuntu-latest'
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug
          ini-values: xdebug.mode=coverage
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-8.1-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-8.1-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts
      - name: 🧪 Run PHPUnit
        run: vendor/bin/phpunit --configuration=phpunit.xml.dist --coverage-xml=build/coverage/coverage-xml --log-junit=build/coverage/junit.xml --coverage-clover=build/coverage/clover.xml --coverage-html=build/coverage/html
      - name: 📤 Upload coverage data
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-8.1-coverage
          path: build/coverage/
          retention-days: 30

  mutation-tests:
    name: 🧟 Mutation Tests
    needs: [ unit-tests ]
    runs-on: 'ubuntu-latest'
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug
          ini-values: xdebug.mode=coverage
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-8.1-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-8.1-composer-
      - name: 📦 Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts
      - name: 📥 Download coverage data
        uses: actions/download-artifact@v2
        with:
          name: ${{ runner.os }}-8.1-coverage
          path: build/coverage/
      - name: 🧟 Run Infection
        run: vendor/bin/infection --threads=$(nproc) --min-covered-msi=90 --coverage=build/coverage --skip-initial-tests --logger-github --no-interaction

  coverage:
    name: 📊 Publish Coverage
    needs: [ unit-tests ]
    runs-on: 'ubuntu-latest'
    steps:
      - name: ⤵️ Checkout Sources
        uses: actions/checkout@v2
      - name: 🐘 Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: php-coveralls/php-coveralls
        env:
          fail-fast: true
      - name: 📥 Download coverage data
        uses: actions/download-artifact@v2
        with:
          name: ${{ runner.os }}-8.1-coverage
          path: build/coverage/
      - name: 📊 Publish coverage data to coveralls.io
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: php-coveralls -x build/coverage/clover.xml -o build/coverage/coveralls-upload.json -v
