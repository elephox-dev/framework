<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="dev-master@5baf85edb457007e92072ffef37307f91758ee28">
  <file src="modules/Collection/src/ArrayMap.php">
    <MixedInferredReturnType occurrences="1">
      <code>mixed</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;items[$validKey]</code>
    </MixedReturnStatement>
  </file>
  <file src="modules/Collection/src/Enumerable.php">
    <UnusedPsalmSuppress occurrences="1">
      <code>RedundantConditionGivenDocblockType</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="modules/Collection/src/IsEnumerable.php">
    <ImplementedParamTypeMismatch occurrences="1">
      <code>$comparer</code>
    </ImplementedParamTypeMismatch>
    <InvalidReturnType occurrences="1">
      <code>GenericEnumerable&lt;Grouping&lt;TGroupKey, mixed, TSource&gt;&gt;</code>
    </InvalidReturnType>
    <LessSpecificImplementedReturnType occurrences="14">
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>mixed</code>
      <code>mixed</code>
      <code>mixed</code>
      <code>mixed</code>
      <code>mixed</code>
    </LessSpecificImplementedReturnType>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>new OrderedIterator($this-&gt;getIterator(), $keySelector(...), $comparer(...))</code>
      <code>new OrderedIterator($this-&gt;getIterator(), $keySelector(...), $comparer(...))</code>
    </MixedArgumentTypeCoercion>
    <PossiblyNullArgument occurrences="4">
      <code>$iterator-&gt;current()</code>
      <code>$iterator-&gt;current()</code>
      <code>$iterator-&gt;current()</code>
      <code>$iterator-&gt;current()</code>
    </PossiblyNullArgument>
    <UnusedClosureParam occurrences="6">
      <code>$collectionElement</code>
      <code>$collectionElementKey</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$key</code>
    </UnusedClosureParam>
  </file>
  <file src="modules/Collection/src/IsKeyedEnumerable.php">
    <ImplementedParamTypeMismatch occurrences="3">
      <code>$comparer</code>
      <code>$other</code>
      <code>$other</code>
    </ImplementedParamTypeMismatch>
    <InvalidArgument occurrences="13">
      <code>$elementKey</code>
      <code>$elementKey</code>
      <code>$elementKey</code>
      <code>$elementKey</code>
      <code>$elementKey</code>
      <code>$other</code>
      <code>$other</code>
      <code>$outerElementKey</code>
      <code>$outerElementKey</code>
      <code>new CallbackFilterIterator($this-&gt;getIterator(), $predicate(...))</code>
      <code>new CallbackFilterIterator($this-&gt;getIterator(), $predicate)</code>
      <code>new SelectIterator($this-&gt;getIterator(), $selector(...))</code>
      <code>new WhileIterator($this-&gt;getIterator(), $predicate(...))</code>
    </InvalidArgument>
    <LessSpecificImplementedReturnType occurrences="18">
      <code>GenericEnumerable</code>
      <code>GenericEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>GenericKeyedEnumerable</code>
      <code>array</code>
      <code>array</code>
      <code>mixed</code>
      <code>mixed</code>
      <code>mixed</code>
      <code>mixed</code>
      <code>mixed</code>
    </LessSpecificImplementedReturnType>
    <MixedArgument occurrences="11">
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$outerElement</code>
      <code>$outerElement</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="4">
      <code>$other</code>
      <code>$other</code>
      <code>new OrderedIterator($this-&gt;getIterator(), $keySelector(...), $comparer(...))</code>
      <code>new OrderedIterator($this-&gt;getIterator(), $keySelector(...), $comparer(...))</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="23">
      <code>$array[$key]</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$last</code>
      <code>$last</code>
      <code>$outerElement</code>
      <code>$returnElement</code>
      <code>$returnElement</code>
    </MixedAssignment>
    <MixedReturnTypeCoercion occurrences="8">
      <code>GenericEnumerable&lt;non-empty-list&lt;TSource&gt;&gt;</code>
      <code>GenericKeyedEnumerable&lt;TIteratorKey, TSource&gt;</code>
      <code>GenericKeyedEnumerable&lt;TIteratorKey, TSource&gt;</code>
      <code>GenericKeyedEnumerable&lt;TIteratorKey, TSource&gt;</code>
      <code>GenericKeyedEnumerable&lt;TIteratorKey, TSource&gt;</code>
      <code>TDefault|TSource</code>
      <code>TSource</code>
      <code>list&lt;TSource&gt;</code>
    </MixedReturnTypeCoercion>
    <PossiblyNullArgument occurrences="8">
      <code>$iterator-&gt;current()</code>
      <code>$iterator-&gt;current()</code>
      <code>$iterator-&gt;current()</code>
      <code>$iterator-&gt;current()</code>
      <code>$iterator-&gt;key()</code>
      <code>$iterator-&gt;key()</code>
      <code>$iterator-&gt;key()</code>
      <code>$iterator-&gt;key()</code>
    </PossiblyNullArgument>
    <UnusedClosureParam occurrences="6">
      <code>$b</code>
      <code>$collectionElementKey</code>
      <code>$element</code>
      <code>$elementKey</code>
      <code>$value</code>
      <code>$value</code>
    </UnusedClosureParam>
  </file>
  <file src="modules/Collection/src/Iterator/KeySelectIterator.php">
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;iterator-&gt;current()</code>
      <code>$this-&gt;iterator-&gt;key()</code>
    </PossiblyNullArgument>
  </file>
  <file src="modules/Collection/src/Iterator/OrderedIterator.php">
    <MixedArgument occurrences="4">
      <code>$a['key']</code>
      <code>$a['value']</code>
      <code>$b['key']</code>
      <code>$b['value']</code>
    </MixedArgument>
  </file>
  <file src="modules/Collection/src/Iterator/SelectIterator.php">
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;iterator-&gt;current()</code>
      <code>$this-&gt;iterator-&gt;key()</code>
    </PossiblyNullArgument>
  </file>
  <file src="modules/Collection/src/Iterator/UniqueByIterator.php">
    <PossiblyNullArgument occurrences="2">
      <code>$current</code>
      <code>$this-&gt;iterator-&gt;current()</code>
    </PossiblyNullArgument>
  </file>
  <file src="modules/Collection/src/Iterator/WhileIterator.php">
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;iterator-&gt;current()</code>
      <code>$this-&gt;iterator-&gt;key()</code>
    </PossiblyNullArgument>
  </file>
  <file src="modules/Collection/src/KeyedEnumerable.php">
    <UnusedPsalmSuppress occurrences="1">
      <code>RedundantConditionGivenDocblockType</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="modules/Collection/src/ObjectMap.php">
    <UnusedPsalmSuppress occurrences="3">
      <code>ImpureMethodCall</code>
      <code>ImpureMethodCall</code>
      <code>ImpureMethodCall</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="modules/Collection/src/OrderedEnumerable.php">
    <MixedArgumentTypeCoercion occurrences="2">
      <code>$orderedIterator</code>
      <code>$orderedIterator</code>
    </MixedArgumentTypeCoercion>
  </file>
</files>
