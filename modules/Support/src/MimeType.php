<?php
declare(strict_types=1);

namespace Elephox\Support;

enum MimeType: string implements Contract\MimeType
{
	case Application1dinterleavedparityfec = "application/1d-interleaved-parityfec";
	case Application3gpdashqoereportxml = "application/3gpdash-qoe-report+xml";
	case Application3gppHaljson = "application/3gppHal+json";
	case Application3gppHalFormsjson = "application/3gppHalForms+json";
	case Application3gppimsxml = "application/3gpp-ims+xml";
	case ApplicationA2L = "application/A2L";
	case Applicationacecbor = "application/ace+cbor";
	case Applicationactivemessage = "application/activemessage";
	case Applicationactivityjson = "application/activity+json";
	case Applicationaltocostmapjson = "application/alto-costmap+json";
	case Applicationaltocostmapfilterjson = "application/alto-costmapfilter+json";
	case Applicationaltodirectoryjson = "application/alto-directory+json";
	case Applicationaltoendpointpropjson = "application/alto-endpointprop+json";
	case Applicationaltoendpointpropparamsjson = "application/alto-endpointpropparams+json";
	case Applicationaltoendpointcostjson = "application/alto-endpointcost+json";
	case Applicationaltoendpointcostparamsjson = "application/alto-endpointcostparams+json";
	case Applicationaltoerrorjson = "application/alto-error+json";
	case Applicationaltonetworkmapfilterjson = "application/alto-networkmapfilter+json";
	case Applicationaltonetworkmapjson = "application/alto-networkmap+json";
	case Applicationaltoupdatestreamcontroljson = "application/alto-updatestreamcontrol+json";
	case Applicationaltoupdatestreamparamsjson = "application/alto-updatestreamparams+json";
	case ApplicationAML = "application/AML";
	case Applicationandrewinset = "application/andrew-inset";
	case Applicationapplefile = "application/applefile";
	case Applicationatjwt = "application/at+jwt";
	case ApplicationATF = "application/ATF";
	case ApplicationATFX = "application/ATFX";
	case Applicationatomxml = "application/atom+xml";
	case Applicationatomcatxml = "application/atomcat+xml";
	case Applicationatomdeletedxml = "application/atomdeleted+xml";
	case Applicationatomicmail = "application/atomicmail";
	case Applicationatomsvcxml = "application/atomsvc+xml";
	case Applicationatscdwdxml = "application/atsc-dwd+xml";
	case Applicationatscdynamiceventmessage = "application/atsc-dynamic-event-message";
	case Applicationatscheldxml = "application/atsc-held+xml";
	case Applicationatscrdtjson = "application/atsc-rdt+json";
	case Applicationatscrsatxml = "application/atsc-rsat+xml";
	case ApplicationATXML = "application/ATXML";
	case Applicationauthpolicyxml = "application/auth-policy+xml";
	case Applicationbacnetxddzip = "application/bacnet-xdd+zip";
	case ApplicationbatchSMTP = "application/batch-SMTP";
	case Applicationbeepxml = "application/beep+xml";
	case Applicationcalendarjson = "application/calendar+json";
	case Applicationcalendarxml = "application/calendar+xml";
	case Applicationcallcompletion = "application/call-completion";
	case ApplicationCALS1840 = "application/CALS-1840";
	case Applicationcaptivejson = "application/captive+json";
	case Applicationcbor = "application/cbor";
	case Applicationcborseq = "application/cbor-seq";
	case Applicationcccex = "application/cccex";
	case Applicationccmpxml = "application/ccmp+xml";
	case Applicationccxmlxml = "application/ccxml+xml";
	case ApplicationCDFXXML = "application/CDFX+XML";
	case Applicationcdmicapability = "application/cdmi-capability";
	case Applicationcdmicontainer = "application/cdmi-container";
	case Applicationcdmidomain = "application/cdmi-domain";
	case Applicationcdmiobject = "application/cdmi-object";
	case Applicationcdmiqueue = "application/cdmi-queue";
	case Applicationcdni = "application/cdni";
	case ApplicationCEA = "application/CEA";
	case Applicationcea2018xml = "application/cea-2018+xml";
	case Applicationcellmlxml = "application/cellml+xml";
	case Applicationcfw = "application/cfw";
	case Applicationclr = "application/clr";
	case Applicationclue_infoxml = "application/clue_info+xml";
	case Applicationcluexml = "application/clue+xml";
	case Applicationcms = "application/cms";
	case Applicationcnrpxml = "application/cnrp+xml";
	case Applicationcoapgroupjson = "application/coap-group+json";
	case Applicationcoappayload = "application/coap-payload";
	case Applicationcommonground = "application/commonground";
	case Applicationconferenceinfoxml = "application/conference-info+xml";
	case Applicationcplxml = "application/cpl+xml";
	case Applicationcose = "application/cose";
	case Applicationcosekey = "application/cose-key";
	case Applicationcosekeyset = "application/cose-key-set";
	case Applicationcsrattrs = "application/csrattrs";
	case Applicationcstaxml = "application/csta+xml";
	case ApplicationCSTAdataxml = "application/CSTAdata+xml";
	case Applicationcsvmjson = "application/csvm+json";
	case Applicationcwt = "application/cwt";
	case Applicationcybercash = "application/cybercash";
	case Applicationdashxml = "application/dash+xml";
	case Applicationdashpatchxml = "application/dash-patch+xml";
	case Applicationdashdelta = "application/dashdelta";
	case Applicationdavmountxml = "application/davmount+xml";
	case Applicationdcarft = "application/dca-rft";
	case ApplicationDCD = "application/DCD";
	case Applicationdecdx = "application/dec-dx";
	case Applicationdialoginfoxml = "application/dialog-info+xml";
	case Applicationdicom = "application/dicom";
	case Applicationdicomjson = "application/dicom+json";
	case Applicationdicomxml = "application/dicom+xml";
	case ApplicationDII = "application/DII";
	case ApplicationDIT = "application/DIT";
	case Applicationdns = "application/dns";
	case Applicationdnsjson = "application/dns+json";
	case Applicationdnsmessage = "application/dns-message";
	case Applicationdotscbor = "application/dots+cbor";
	case Applicationdskppxml = "application/dskpp+xml";
	case Applicationdsscder = "application/dssc+der";
	case Applicationdsscxml = "application/dssc+xml";
	case Applicationdvcs = "application/dvcs";
	case Applicationecmascript = "application/ecmascript";
	case ApplicationEDIconsent = "application/EDI-consent";
	case ApplicationEDIFACT = "application/EDIFACT";
	case ApplicationEDIX12 = "application/EDI-X12";
	case Applicationefi = "application/efi";
	case Applicationelmjson = "application/elm+json";
	case Applicationelmxml = "application/elm+xml";
	case ApplicationEmergencyCallDatacapxml = "application/EmergencyCallData.cap+xml";
	case ApplicationEmergencyCallDataCommentxml = "application/EmergencyCallData.Comment+xml";
	case ApplicationEmergencyCallDataControlxml = "application/EmergencyCallData.Control+xml";
	case ApplicationEmergencyCallDataDeviceInfoxml = "application/EmergencyCallData.DeviceInfo+xml";
	case ApplicationEmergencyCallDataeCallMSD = "application/EmergencyCallData.eCall.MSD";
	case ApplicationEmergencyCallDataProviderInfoxml = "application/EmergencyCallData.ProviderInfo+xml";
	case ApplicationEmergencyCallDataServiceInfoxml = "application/EmergencyCallData.ServiceInfo+xml";
	case ApplicationEmergencyCallDataSubscriberInfoxml = "application/EmergencyCallData.SubscriberInfo+xml";
	case ApplicationEmergencyCallDataVEDSxml = "application/EmergencyCallData.VEDS+xml";
	case Applicationemmaxml = "application/emma+xml";
	case Applicationemotionmlxml = "application/emotionml+xml";
	case Applicationencaprtp = "application/encaprtp";
	case Applicationeppxml = "application/epp+xml";
	case Applicationepubzip = "application/epub+zip";
	case Applicationeshop = "application/eshop";
	case Applicationexample = "application/example";
	case Applicationexi = "application/exi";
	case Applicationexpectctreportjson = "application/expect-ct-report+json";
	case Applicationexpress = "application/express";
	case Applicationfastinfoset = "application/fastinfoset";
	case Applicationfastsoap = "application/fastsoap";
	case Applicationfdtxml = "application/fdt+xml";
	case Applicationfhirjson = "application/fhir+json";
	case Applicationfhirxml = "application/fhir+xml";
	case Applicationfits = "application/fits";
	case Applicationflexfec = "application/flexfec";
	case Applicationfonttdpfr = "application/font-tdpfr";
	case Applicationframeworkattributesxml = "application/framework-attributes+xml";
	case Applicationgeojson = "application/geo+json";
	case Applicationgeojsonseq = "application/geo+json-seq";
	case Applicationgeopackagesqlite3 = "application/geopackage+sqlite3";
	case Applicationgeoxacmlxml = "application/geoxacml+xml";
	case Applicationgltfbuffer = "application/gltf-buffer";
	case Applicationgmlxml = "application/gml+xml";
	case Applicationgzip = "application/gzip";
	case ApplicationH224 = "application/H224";
	case Applicationheldxml = "application/held+xml";
	case Applicationhttp = "application/http";
	case Applicationhyperstudio = "application/hyperstudio";
	case Applicationibekeyrequestxml = "application/ibe-key-request+xml";
	case Applicationibepkgreplyxml = "application/ibe-pkg-reply+xml";
	case Applicationibeppdata = "application/ibe-pp-data";
	case Applicationiges = "application/iges";
	case Applicationimiscomposingxml = "application/im-iscomposing+xml";
	case Applicationindex = "application/index";
	case Applicationindexcmd = "application/index.cmd";
	case Applicationindexobj = "application/index.obj";
	case Applicationindexresponse = "application/index.response";
	case Applicationindexvnd = "application/index.vnd";
	case Applicationinkmlxml = "application/inkml+xml";
	case ApplicationIOTP = "application/IOTP";
	case Applicationipfix = "application/ipfix";
	case Applicationipp = "application/ipp";
	case ApplicationISUP = "application/ISUP";
	case Applicationitsxml = "application/its+xml";
	case Applicationjavascript = "application/javascript";
	case Applicationjf2feedjson = "application/jf2feed+json";
	case Applicationjose = "application/jose";
	case Applicationjosejson = "application/jose+json";
	case Applicationjrdjson = "application/jrd+json";
	case Applicationjscalendarjson = "application/jscalendar+json";
	case Applicationjson = "application/json";
	case Applicationjsonpatchjson = "application/json-patch+json";
	case Applicationjsonseq = "application/json-seq";
	case Applicationjwkjson = "application/jwk+json";
	case Applicationjwksetjson = "application/jwk-set+json";
	case Applicationjwt = "application/jwt";
	case Applicationkpmlrequestxml = "application/kpml-request+xml";
	case Applicationkpmlresponsexml = "application/kpml-response+xml";
	case Applicationldjson = "application/ld+json";
	case Applicationlgrxml = "application/lgr+xml";
	case Applicationlinkformat = "application/link-format";
	case Applicationloadcontrolxml = "application/load-control+xml";
	case Applicationlostxml = "application/lost+xml";
	case Applicationlostsyncxml = "application/lostsync+xml";
	case Applicationlpfzip = "application/lpf+zip";
	case ApplicationLXF = "application/LXF";
	case Applicationmacbinhex40 = "application/mac-binhex40";
	case Applicationmacwriteii = "application/macwriteii";
	case Applicationmadsxml = "application/mads+xml";
	case Applicationmanifestjson = "application/manifest+json";
	case Applicationmarc = "application/marc";
	case Applicationmarcxmlxml = "application/marcxml+xml";
	case Applicationmathematica = "application/mathematica";
	case Applicationmathmlxml = "application/mathml+xml";
	case Applicationmathmlcontentxml = "application/mathml-content+xml";
	case Applicationmathmlpresentationxml = "application/mathml-presentation+xml";
	case Applicationmbmsassociatedproceduredescriptionxml = "application/mbms-associated-procedure-description+xml";
	case Applicationmbmsderegisterxml = "application/mbms-deregister+xml";
	case Applicationmbmsenvelopexml = "application/mbms-envelope+xml";
	case Applicationmbmsmskresponsexml = "application/mbms-msk-response+xml";
	case Applicationmbmsmskxml = "application/mbms-msk+xml";
	case Applicationmbmsprotectiondescriptionxml = "application/mbms-protection-description+xml";
	case Applicationmbmsreceptionreportxml = "application/mbms-reception-report+xml";
	case Applicationmbmsregisterresponsexml = "application/mbms-register-response+xml";
	case Applicationmbmsregisterxml = "application/mbms-register+xml";
	case Applicationmbmsschedulexml = "application/mbms-schedule+xml";
	case Applicationmbmsuserservicedescriptionxml = "application/mbms-user-service-description+xml";
	case Applicationmbox = "application/mbox";
	case Applicationmedia_controlxml = "application/media_control+xml";
	case Applicationmediapolicydatasetxml = "application/media-policy-dataset+xml";
	case Applicationmediaservercontrolxml = "application/mediaservercontrol+xml";
	case Applicationmergepatchjson = "application/merge-patch+json";
	case Applicationmetalink4xml = "application/metalink4+xml";
	case Applicationmetsxml = "application/mets+xml";
	case ApplicationMF4 = "application/MF4";
	case Applicationmikey = "application/mikey";
	case Applicationmipc = "application/mipc";
	case Applicationmissingblockscborseq = "application/missing-blocks+cbor-seq";
	case Applicationmmtaeixml = "application/mmt-aei+xml";
	case Applicationmmtusdxml = "application/mmt-usd+xml";
	case Applicationmodsxml = "application/mods+xml";
	case Applicationmosskeys = "application/moss-keys";
	case Applicationmosssignature = "application/moss-signature";
	case Applicationmosskeydata = "application/mosskey-data";
	case Applicationmosskeyrequest = "application/mosskey-request";
	case Applicationmp21 = "application/mp21";
	case Applicationmp4 = "application/mp4";
	case Applicationmpeg4generic = "application/mpeg4-generic";
	case Applicationmpeg4iod = "application/mpeg4-iod";
	case Applicationmpeg4iodxmt = "application/mpeg4-iod-xmt";
	case Applicationmrbconsumerxml = "application/mrb-consumer+xml";
	case Applicationmrbpublishxml = "application/mrb-publish+xml";
	case Applicationmscivrxml = "application/msc-ivr+xml";
	case Applicationmscmixerxml = "application/msc-mixer+xml";
	case Applicationmsword = "application/msword";
	case Applicationmudjson = "application/mud+json";
	case Applicationmultipartcore = "application/multipart-core";
	case Applicationmxf = "application/mxf";
	case Applicationnquads = "application/n-quads";
	case Applicationntriples = "application/n-triples";
	case Applicationnasdata = "application/nasdata";
	case Applicationnewscheckgroups = "application/news-checkgroups";
	case Applicationnewsgroupinfo = "application/news-groupinfo";
	case Applicationnewstransmission = "application/news-transmission";
	case Applicationnlsmlxml = "application/nlsml+xml";
	case Applicationnode = "application/node";
	case Applicationnss = "application/nss";
	case Applicationoauthauthzreqjwt = "application/oauth-authz-req+jwt";
	case Applicationocsprequest = "application/ocsp-request";
	case Applicationocspresponse = "application/ocsp-response";
	case Applicationoctetstream = "application/octet-stream";
	case ApplicationODA = "application/ODA";
	case Applicationodmxml = "application/odm+xml";
	case ApplicationODX = "application/ODX";
	case Applicationoebpspackagexml = "application/oebps-package+xml";
	case Applicationogg = "application/ogg";
	case Applicationopcnodesetxml = "application/opc-nodeset+xml";
	case Applicationoscore = "application/oscore";
	case Applicationoxps = "application/oxps";
	case Applicationp21 = "application/p21";
	case Applicationp21zip = "application/p21+zip";
	case Applicationp2poverlayxml = "application/p2p-overlay+xml";
	case Applicationparityfec = "application/parityfec";
	case Applicationpassport = "application/passport";
	case Applicationpatchopserrorxml = "application/patch-ops-error+xml";
	case Applicationpdf = "application/pdf";
	case ApplicationPDX = "application/PDX";
	case Applicationpemcertificatechain = "application/pem-certificate-chain";
	case Applicationpgpencrypted = "application/pgp-encrypted";
	case Applicationpgpkeys = "application/pgp-keys";
	case Applicationpgpsignature = "application/pgp-signature";
	case Applicationpidfdiffxml = "application/pidf-diff+xml";
	case Applicationpidfxml = "application/pidf+xml";
	case Applicationpkcs10 = "application/pkcs10";
	case Applicationpkcs7mime = "application/pkcs7-mime";
	case Applicationpkcs7signature = "application/pkcs7-signature";
	case Applicationpkcs8 = "application/pkcs8";
	case Applicationpkcs8encrypted = "application/pkcs8-encrypted";
	case Applicationpkcs12 = "application/pkcs12";
	case Applicationpkixattrcert = "application/pkix-attr-cert";
	case Applicationpkixcert = "application/pkix-cert";
	case Applicationpkixcrl = "application/pkix-crl";
	case Applicationpkixpkipath = "application/pkix-pkipath";
	case Applicationpkixcmp = "application/pkixcmp";
	case Applicationplsxml = "application/pls+xml";
	case Applicationpocsettingsxml = "application/poc-settings+xml";
	case Applicationpostscript = "application/postscript";
	case Applicationppsptrackerjson = "application/ppsp-tracker+json";
	case Applicationproblemjson = "application/problem+json";
	case Applicationproblemxml = "application/problem+xml";
	case Applicationprovenancexml = "application/provenance+xml";
	case Applicationprsalvestrandtitraxsheet = "application/prs.alvestrand.titrax-sheet";
	case Applicationprscww = "application/prs.cww";
	case Applicationprscyn = "application/prs.cyn";
	case Applicationprshpubzip = "application/prs.hpub+zip";
	case Applicationprsnprend = "application/prs.nprend";
	case Applicationprsplucker = "application/prs.plucker";
	case Applicationprsrdfxmlcrypt = "application/prs.rdf-xml-crypt";
	case Applicationprsxsfxml = "application/prs.xsf+xml";
	case Applicationpskcxml = "application/pskc+xml";
	case Applicationpvdjson = "application/pvd+json";
	case Applicationrdfxml = "application/rdf+xml";
	case Applicationrouteapdxml = "application/route-apd+xml";
	case Applicationroutestsidxml = "application/route-s-tsid+xml";
	case Applicationrouteusdxml = "application/route-usd+xml";
	case ApplicationQSIG = "application/QSIG";
	case Applicationraptorfec = "application/raptorfec";
	case Applicationrdapjson = "application/rdap+json";
	case Applicationreginfoxml = "application/reginfo+xml";
	case Applicationrelaxngcompactsyntax = "application/relax-ng-compact-syntax";
	case Applicationremoteprinting = "application/remote-printing";
	case Applicationreputonjson = "application/reputon+json";
	case Applicationresourcelistsdiffxml = "application/resource-lists-diff+xml";
	case Applicationresourcelistsxml = "application/resource-lists+xml";
	case Applicationrfcxml = "application/rfc+xml";
	case Applicationriscos = "application/riscos";
	case Applicationrlmixml = "application/rlmi+xml";
	case Applicationrlsservicesxml = "application/rls-services+xml";
	case Applicationrpkighostbusters = "application/rpki-ghostbusters";
	case Applicationrpkimanifest = "application/rpki-manifest";
	case Applicationrpkipublication = "application/rpki-publication";
	case Applicationrpkiroa = "application/rpki-roa";
	case Applicationrpkiupdown = "application/rpki-updown";
	case Applicationrtf = "application/rtf";
	case Applicationrtploopback = "application/rtploopback";
	case Applicationrtx = "application/rtx";
	case Applicationsamlassertionxml = "application/samlassertion+xml";
	case Applicationsamlmetadataxml = "application/samlmetadata+xml";
	case Applicationsarifexternalpropertiesjson = "application/sarif-external-properties+json";
	case Applicationsarifjson = "application/sarif+json";
	case Applicationsbe = "application/sbe";
	case Applicationsbmlxml = "application/sbml+xml";
	case Applicationscaipxml = "application/scaip+xml";
	case Applicationscimjson = "application/scim+json";
	case Applicationscvpcvrequest = "application/scvp-cv-request";
	case Applicationscvpcvresponse = "application/scvp-cv-response";
	case Applicationscvpvprequest = "application/scvp-vp-request";
	case Applicationscvpvpresponse = "application/scvp-vp-response";
	case Applicationsdp = "application/sdp";
	case Applicationseceventjwt = "application/secevent+jwt";
	case Applicationsenmletchcbor = "application/senml-etch+cbor";
	case Applicationsenmletchjson = "application/senml-etch+json";
	case Applicationsenmlexi = "application/senml-exi";
	case Applicationsenmlcbor = "application/senml+cbor";
	case Applicationsenmljson = "application/senml+json";
	case Applicationsenmlxml = "application/senml+xml";
	case Applicationsensmlexi = "application/sensml-exi";
	case Applicationsensmlcbor = "application/sensml+cbor";
	case Applicationsensmljson = "application/sensml+json";
	case Applicationsensmlxml = "application/sensml+xml";
	case Applicationsepexi = "application/sep-exi";
	case Applicationsepxml = "application/sep+xml";
	case Applicationsessioninfo = "application/session-info";
	case Applicationsetpayment = "application/set-payment";
	case Applicationsetpaymentinitiation = "application/set-payment-initiation";
	case Applicationsetregistration = "application/set-registration";
	case Applicationsetregistrationinitiation = "application/set-registration-initiation";
	case ApplicationSGML = "application/SGML";
	case Applicationsgmlopencatalog = "application/sgml-open-catalog";
	case Applicationshfxml = "application/shf+xml";
	case Applicationsieve = "application/sieve";
	case Applicationsimplefilterxml = "application/simple-filter+xml";
	case Applicationsimplemessagesummary = "application/simple-message-summary";
	case ApplicationsimpleSymbolContainer = "application/simpleSymbolContainer";
	case Applicationsipc = "application/sipc";
	case Applicationslate = "application/slate";
	case Applicationsmilxml = "application/smil+xml";
	case Applicationsmpte336m = "application/smpte336m";
	case Applicationsoapfastinfoset = "application/soap+fastinfoset";
	case Applicationsoapxml = "application/soap+xml";
	case Applicationsparqlquery = "application/sparql-query";
	case Applicationspdxjson = "application/spdx+json";
	case Applicationsparqlresultsxml = "application/sparql-results+xml";
	case Applicationspiritseventxml = "application/spirits-event+xml";
	case Applicationsql = "application/sql";
	case Applicationsrgs = "application/srgs";
	case Applicationsrgsxml = "application/srgs+xml";
	case Applicationsruxml = "application/sru+xml";
	case Applicationssmlxml = "application/ssml+xml";
	case Applicationstixjson = "application/stix+json";
	case Applicationswidxml = "application/swid+xml";
	case Applicationtampapexupdate = "application/tamp-apex-update";
	case Applicationtampapexupdateconfirm = "application/tamp-apex-update-confirm";
	case Applicationtampcommunityupdate = "application/tamp-community-update";
	case Applicationtampcommunityupdateconfirm = "application/tamp-community-update-confirm";
	case Applicationtamperror = "application/tamp-error";
	case Applicationtampsequenceadjust = "application/tamp-sequence-adjust";
	case Applicationtampsequenceadjustconfirm = "application/tamp-sequence-adjust-confirm";
	case Applicationtampstatusquery = "application/tamp-status-query";
	case Applicationtampstatusresponse = "application/tamp-status-response";
	case Applicationtampupdate = "application/tamp-update";
	case Applicationtampupdateconfirm = "application/tamp-update-confirm";
	case Applicationtaxiijson = "application/taxii+json";
	case Applicationtdjson = "application/td+json";
	case Applicationteixml = "application/tei+xml";
	case ApplicationTETRA_ISI = "application/TETRA_ISI";
	case Applicationthraudxml = "application/thraud+xml";
	case Applicationtimestampquery = "application/timestamp-query";
	case Applicationtimestampreply = "application/timestamp-reply";
	case Applicationtimestampeddata = "application/timestamped-data";
	case Applicationtlsrptgzip = "application/tlsrpt+gzip";
	case Applicationtlsrptjson = "application/tlsrpt+json";
	case Applicationtnauthlist = "application/tnauthlist";
	case Applicationtokenintrospectionjwt = "application/token-introspection+jwt";
	case Applicationtrickleicesdpfrag = "application/trickle-ice-sdpfrag";
	case Applicationtrig = "application/trig";
	case Applicationttmlxml = "application/ttml+xml";
	case Applicationtvetrigger = "application/tve-trigger";
	case Applicationtzif = "application/tzif";
	case Applicationtzifleap = "application/tzif-leap";
	case Applicationulpfec = "application/ulpfec";
	case Applicationurcgrpsheetxml = "application/urc-grpsheet+xml";
	case Applicationurcressheetxml = "application/urc-ressheet+xml";
	case Applicationurctargetdescxml = "application/urc-targetdesc+xml";
	case Applicationurcuisocketdescxml = "application/urc-uisocketdesc+xml";
	case Applicationvcardjson = "application/vcard+json";
	case Applicationvcardxml = "application/vcard+xml";
	case Applicationvemmi = "application/vemmi";
	case Applicationvnd1000mindsdecisionmodelxml = "application/vnd.1000minds.decision-model+xml";
	case Applicationvnd3gpp5gnas = "application/vnd.3gpp.5gnas";
	case Applicationvnd3gppaccesstransfereventsxml = "application/vnd.3gpp.access-transfer-events+xml";
	case Applicationvnd3gppbsfxml = "application/vnd.3gpp.bsf+xml";
	case Applicationvnd3gppGMOPxml = "application/vnd.3gpp.GMOP+xml";
	case Applicationvnd3gppgtpc = "application/vnd.3gpp.gtpc";
	case Applicationvnd3gppinterworkingdata = "application/vnd.3gpp.interworking-data";
	case Applicationvnd3gpplpp = "application/vnd.3gpp.lpp";
	case Applicationvnd3gppmcsignallingear = "application/vnd.3gpp.mc-signalling-ear";
	case Applicationvnd3gppmcdataaffiliationcommandxml = "application/vnd.3gpp.mcdata-affiliation-command+xml";
	case Applicationvnd3gppmcdatainfoxml = "application/vnd.3gpp.mcdata-info+xml";
	case Applicationvnd3gppmcdatapayload = "application/vnd.3gpp.mcdata-payload";
	case Applicationvnd3gppmcdataserviceconfigxml = "application/vnd.3gpp.mcdata-service-config+xml";
	case Applicationvnd3gppmcdatasignalling = "application/vnd.3gpp.mcdata-signalling";
	case Applicationvnd3gppmcdataueconfigxml = "application/vnd.3gpp.mcdata-ue-config+xml";
	case Applicationvnd3gppmcdatauserprofilexml = "application/vnd.3gpp.mcdata-user-profile+xml";
	case Applicationvnd3gppmcpttaffiliationcommandxml = "application/vnd.3gpp.mcptt-affiliation-command+xml";
	case Applicationvnd3gppmcpttfloorrequestxml = "application/vnd.3gpp.mcptt-floor-request+xml";
	case Applicationvnd3gppmcpttinfoxml = "application/vnd.3gpp.mcptt-info+xml";
	case Applicationvnd3gppmcpttlocationinfoxml = "application/vnd.3gpp.mcptt-location-info+xml";
	case Applicationvnd3gppmcpttmbmsusageinfoxml = "application/vnd.3gpp.mcptt-mbms-usage-info+xml";
	case Applicationvnd3gppmcpttserviceconfigxml = "application/vnd.3gpp.mcptt-service-config+xml";
	case Applicationvnd3gppmcpttsignedxml = "application/vnd.3gpp.mcptt-signed+xml";
	case Applicationvnd3gppmcpttueconfigxml = "application/vnd.3gpp.mcptt-ue-config+xml";
	case Applicationvnd3gppmcpttueinitconfigxml = "application/vnd.3gpp.mcptt-ue-init-config+xml";
	case Applicationvnd3gppmcpttuserprofilexml = "application/vnd.3gpp.mcptt-user-profile+xml";
	case Applicationvnd3gppmcvideoaffiliationcommandxml = "application/vnd.3gpp.mcvideo-affiliation-command+xml";
	case Applicationvnd3gppmcvideoinfoxml = "application/vnd.3gpp.mcvideo-info+xml";
	case Applicationvnd3gppmcvideolocationinfoxml = "application/vnd.3gpp.mcvideo-location-info+xml";
	case Applicationvnd3gppmcvideombmsusageinfoxml = "application/vnd.3gpp.mcvideo-mbms-usage-info+xml";
	case Applicationvnd3gppmcvideoserviceconfigxml = "application/vnd.3gpp.mcvideo-service-config+xml";
	case Applicationvnd3gppmcvideotransmissionrequestxml = "application/vnd.3gpp.mcvideo-transmission-request+xml";
	case Applicationvnd3gppmcvideoueconfigxml = "application/vnd.3gpp.mcvideo-ue-config+xml";
	case Applicationvnd3gppmcvideouserprofilexml = "application/vnd.3gpp.mcvideo-user-profile+xml";
	case Applicationvnd3gppmidcallxml = "application/vnd.3gpp.mid-call+xml";
	case Applicationvnd3gppngap = "application/vnd.3gpp.ngap";
	case Applicationvnd3gpppfcp = "application/vnd.3gpp.pfcp";
	case Applicationvnd3gpppicbwlarge = "application/vnd.3gpp.pic-bw-large";
	case Applicationvnd3gpppicbwsmall = "application/vnd.3gpp.pic-bw-small";
	case Applicationvnd3gpppicbwvar = "application/vnd.3gpp.pic-bw-var";
	case Applicationvnd3gppprosepc3chxml = "application/vnd.3gpp-prose-pc3ch+xml";
	case Applicationvnd3gppprosexml = "application/vnd.3gpp-prose+xml";
	case Applicationvnd3gpps1ap = "application/vnd.3gpp.s1ap";
	case Applicationvnd3gppsms = "application/vnd.3gpp.sms";
	case Applicationvnd3gppsmsxml = "application/vnd.3gpp.sms+xml";
	case Applicationvnd3gppsrvccextxml = "application/vnd.3gpp.srvcc-ext+xml";
	case Applicationvnd3gppSRVCCinfoxml = "application/vnd.3gpp.SRVCC-info+xml";
	case Applicationvnd3gppstateandeventinfoxml = "application/vnd.3gpp.state-and-event-info+xml";
	case Applicationvnd3gppussdxml = "application/vnd.3gpp.ussd+xml";
	case Applicationvnd3gppv2xlocalserviceinformation = "application/vnd.3gpp-v2x-local-service-information";
	case Applicationvnd3gpp2bcmcsinfoxml = "application/vnd.3gpp2.bcmcsinfo+xml";
	case Applicationvnd3gpp2sms = "application/vnd.3gpp2.sms";
	case Applicationvnd3gpp2tcap = "application/vnd.3gpp2.tcap";
	case Applicationvnd3lightssoftwareimagescal = "application/vnd.3lightssoftware.imagescal";
	case Applicationvnd3MPostitNotes = "application/vnd.3M.Post-it-Notes";
	case Applicationvndaccpacsimplyaso = "application/vnd.accpac.simply.aso";
	case Applicationvndaccpacsimplyimp = "application/vnd.accpac.simply.imp";
	case Applicationvndacucobol = "application/vnd.acucobol";
	case Applicationvndacucorp = "application/vnd.acucorp";
	case Applicationvndadobeflashmovie = "application/vnd.adobe.flash.movie";
	case Applicationvndadobeformscentralfcdt = "application/vnd.adobe.formscentral.fcdt";
	case Applicationvndadobefxp = "application/vnd.adobe.fxp";
	case Applicationvndadobepartialupload = "application/vnd.adobe.partial-upload";
	case Applicationvndadobexdpxml = "application/vnd.adobe.xdp+xml";
	case Applicationvndadobexfdf = "application/vnd.adobe.xfdf";
	case Applicationvndaetherimp = "application/vnd.aether.imp";
	case Applicationvndafpcafplinedata = "application/vnd.afpc.afplinedata";
	case Applicationvndafpcafplinedatapagedef = "application/vnd.afpc.afplinedata-pagedef";
	case Applicationvndafpccmocacmresource = "application/vnd.afpc.cmoca-cmresource";
	case Applicationvndafpcfocacharset = "application/vnd.afpc.foca-charset";
	case Applicationvndafpcfocacodedfont = "application/vnd.afpc.foca-codedfont";
	case Applicationvndafpcfocacodepage = "application/vnd.afpc.foca-codepage";
	case Applicationvndafpcmodca = "application/vnd.afpc.modca";
	case Applicationvndafpcmodcacmtable = "application/vnd.afpc.modca-cmtable";
	case Applicationvndafpcmodcaformdef = "application/vnd.afpc.modca-formdef";
	case Applicationvndafpcmodcamediummap = "application/vnd.afpc.modca-mediummap";
	case Applicationvndafpcmodcaobjectcontainer = "application/vnd.afpc.modca-objectcontainer";
	case Applicationvndafpcmodcaoverlay = "application/vnd.afpc.modca-overlay";
	case Applicationvndafpcmodcapagesegment = "application/vnd.afpc.modca-pagesegment";
	case Applicationvndage = "application/vnd.age";
	case Applicationvndahbarcode = "application/vnd.ah-barcode";
	case Applicationvndaheadspace = "application/vnd.ahead.space";
	case Applicationvndairzipfilesecureazf = "application/vnd.airzip.filesecure.azf";
	case Applicationvndairzipfilesecureazs = "application/vnd.airzip.filesecure.azs";
	case Applicationvndamadeusjson = "application/vnd.amadeus+json";
	case Applicationvndamazonmobi8ebook = "application/vnd.amazon.mobi8-ebook";
	case Applicationvndamericandynamicsacc = "application/vnd.americandynamics.acc";
	case Applicationvndamigaami = "application/vnd.amiga.ami";
	case Applicationvndamundsenmazexml = "application/vnd.amundsen.maze+xml";
	case Applicationvndandroidota = "application/vnd.android.ota";
	case Applicationvndanki = "application/vnd.anki";
	case Applicationvndanserwebcertificateissueinitiation = "application/vnd.anser-web-certificate-issue-initiation";
	case Applicationvndantixgamecomponent = "application/vnd.antix.game-component";
	case Applicationvndapachearrowfile = "application/vnd.apache.arrow.file";
	case Applicationvndapachearrowstream = "application/vnd.apache.arrow.stream";
	case Applicationvndapachethriftbinary = "application/vnd.apache.thrift.binary";
	case Applicationvndapachethriftcompact = "application/vnd.apache.thrift.compact";
	case Applicationvndapachethriftjson = "application/vnd.apache.thrift.json";
	case Applicationvndapijson = "application/vnd.api+json";
	case Applicationvndaplextorwarrpjson = "application/vnd.aplextor.warrp+json";
	case Applicationvndapothekendereservationjson = "application/vnd.apothekende.reservation+json";
	case Applicationvndappleinstallerxml = "application/vnd.apple.installer+xml";
	case Applicationvndapplekeynote = "application/vnd.apple.keynote";
	case Applicationvndapplempegurl = "application/vnd.apple.mpegurl";
	case Applicationvndapplenumbers = "application/vnd.apple.numbers";
	case Applicationvndapplepages = "application/vnd.apple.pages";
	case Applicationvndaristanetworksswi = "application/vnd.aristanetworks.swi";
	case Applicationvndartisanjson = "application/vnd.artisan+json";
	case Applicationvndartsquare = "application/vnd.artsquare";
	case Applicationvndastraeasoftwareiota = "application/vnd.astraea-software.iota";
	case Applicationvndaudiograph = "application/vnd.audiograph";
	case Applicationvndautopackage = "application/vnd.autopackage";
	case Applicationvndavalonjson = "application/vnd.avalon+json";
	case Applicationvndavistarxml = "application/vnd.avistar+xml";
	case Applicationvndbalsamiqbmmlxml = "application/vnd.balsamiq.bmml+xml";
	case Applicationvndbananaaccounting = "application/vnd.banana-accounting";
	case Applicationvndbbfusperror = "application/vnd.bbf.usp.error";
	case Applicationvndbbfuspmsg = "application/vnd.bbf.usp.msg";
	case Applicationvndbbfuspmsgjson = "application/vnd.bbf.usp.msg+json";
	case Applicationvndbalsamiqbmpr = "application/vnd.balsamiq.bmpr";
	case Applicationvndbekitzurstechjson = "application/vnd.bekitzur-stech+json";
	case Applicationvndbintmedcontent = "application/vnd.bint.med-content";
	case Applicationvndbiopaxrdfxml = "application/vnd.biopax.rdf+xml";
	case Applicationvndblinkidbvaluewrapper = "application/vnd.blink-idb-value-wrapper";
	case Applicationvndblueicemultipass = "application/vnd.blueice.multipass";
	case Applicationvndbluetoothepoob = "application/vnd.bluetooth.ep.oob";
	case Applicationvndbluetoothleoob = "application/vnd.bluetooth.le.oob";
	case Applicationvndbmi = "application/vnd.bmi";
	case Applicationvndbpf = "application/vnd.bpf";
	case Applicationvndbpf3 = "application/vnd.bpf3";
	case Applicationvndbusinessobjects = "application/vnd.businessobjects";
	case Applicationvndbyuuapijson = "application/vnd.byu.uapi+json";
	case Applicationvndcabjscript = "application/vnd.cab-jscript";
	case Applicationvndcanoncpdl = "application/vnd.canon-cpdl";
	case Applicationvndcanonlips = "application/vnd.canon-lips";
	case Applicationvndcapasystemspgjson = "application/vnd.capasystems-pg+json";
	case Applicationvndcendiothinlincclientconf = "application/vnd.cendio.thinlinc.clientconf";
	case Applicationvndcenturysystemstcp_stream = "application/vnd.century-systems.tcp_stream";
	case Applicationvndchemdrawxml = "application/vnd.chemdraw+xml";
	case Applicationvndchesspgn = "application/vnd.chess-pgn";
	case Applicationvndchipnutskaraokemmd = "application/vnd.chipnuts.karaoke-mmd";
	case Applicationvndciedi = "application/vnd.ciedi";
	case Applicationvndcinderella = "application/vnd.cinderella";
	case Applicationvndcirpackisdnext = "application/vnd.cirpack.isdn-ext";
	case Applicationvndcitationstylesstylexml = "application/vnd.citationstyles.style+xml";
	case Applicationvndclaymore = "application/vnd.claymore";
	case Applicationvndcloantorp9 = "application/vnd.cloanto.rp9";
	case Applicationvndclonkc4group = "application/vnd.clonk.c4group";
	case Applicationvndcluetrustcartomobileconfig = "application/vnd.cluetrust.cartomobile-config";
	case Applicationvndcluetrustcartomobileconfigpkg = "application/vnd.cluetrust.cartomobile-config-pkg";
	case Applicationvndcoffeescript = "application/vnd.coffeescript";
	case Applicationvndcollabioxodocumentsdocument = "application/vnd.collabio.xodocuments.document";
	case Applicationvndcollabioxodocumentsdocumenttemplate = "application/vnd.collabio.xodocuments.document-template";
	case Applicationvndcollabioxodocumentspresentation = "application/vnd.collabio.xodocuments.presentation";
	case Applicationvndcollabioxodocumentspresentationtemplate = "application/vnd.collabio.xodocuments.presentation-template";
	case Applicationvndcollabioxodocumentsspreadsheet = "application/vnd.collabio.xodocuments.spreadsheet";
	case Applicationvndcollabioxodocumentsspreadsheettemplate = "application/vnd.collabio.xodocuments.spreadsheet-template";
	case Applicationvndcollectiondocjson = "application/vnd.collection.doc+json";
	case Applicationvndcollectionjson = "application/vnd.collection+json";
	case Applicationvndcollectionnextjson = "application/vnd.collection.next+json";
	case Applicationvndcomicbookrar = "application/vnd.comicbook-rar";
	case Applicationvndcomicbookzip = "application/vnd.comicbook+zip";
	case Applicationvndcommercebattelle = "application/vnd.commerce-battelle";
	case Applicationvndcommonspace = "application/vnd.commonspace";
	case Applicationvndcoreosignitionjson = "application/vnd.coreos.ignition+json";
	case Applicationvndcosmocaller = "application/vnd.cosmocaller";
	case Applicationvndcontactcmsg = "application/vnd.contact.cmsg";
	case Applicationvndcrickclicker = "application/vnd.crick.clicker";
	case Applicationvndcrickclickerkeyboard = "application/vnd.crick.clicker.keyboard";
	case Applicationvndcrickclickerpalette = "application/vnd.crick.clicker.palette";
	case Applicationvndcrickclickertemplate = "application/vnd.crick.clicker.template";
	case Applicationvndcrickclickerwordbank = "application/vnd.crick.clicker.wordbank";
	case Applicationvndcriticaltoolswbsxml = "application/vnd.criticaltools.wbs+xml";
	case Applicationvndcryptiipipejson = "application/vnd.cryptii.pipe+json";
	case Applicationvndcryptoshadefile = "application/vnd.crypto-shade-file";
	case Applicationvndcryptomatorencrypted = "application/vnd.cryptomator.encrypted";
	case Applicationvndcryptomatorvault = "application/vnd.cryptomator.vault";
	case Applicationvndctcposml = "application/vnd.ctc-posml";
	case Applicationvndctctwsxml = "application/vnd.ctct.ws+xml";
	case Applicationvndcupspdf = "application/vnd.cups-pdf";
	case Applicationvndcupspostscript = "application/vnd.cups-postscript";
	case Applicationvndcupsppd = "application/vnd.cups-ppd";
	case Applicationvndcupsraster = "application/vnd.cups-raster";
	case Applicationvndcupsraw = "application/vnd.cups-raw";
	case Applicationvndcurl = "application/vnd.curl";
	case Applicationvndcyandeanrootxml = "application/vnd.cyan.dean.root+xml";
	case Applicationvndcybank = "application/vnd.cybank";
	case Applicationvndcyclonedxjson = "application/vnd.cyclonedx+json";
	case Applicationvndcyclonedxxml = "application/vnd.cyclonedx+xml";
	case Applicationvndd2lcoursepackage1p0zip = "application/vnd.d2l.coursepackage1p0+zip";
	case Applicationvndd3mdataset = "application/vnd.d3m-dataset";
	case Applicationvndd3mproblem = "application/vnd.d3m-problem";
	case Applicationvnddart = "application/vnd.dart";
	case Applicationvnddatavisionrdz = "application/vnd.data-vision.rdz";
	case Applicationvnddatapackagejson = "application/vnd.datapackage+json";
	case Applicationvnddataresourcejson = "application/vnd.dataresource+json";
	case Applicationvnddbf = "application/vnd.dbf";
	case Applicationvnddebianbinarypackage = "application/vnd.debian.binary-package";
	case Applicationvnddecedata = "application/vnd.dece.data";
	case Applicationvnddecettmlxml = "application/vnd.dece.ttml+xml";
	case Applicationvnddeceunspecified = "application/vnd.dece.unspecified";
	case Applicationvnddecezip = "application/vnd.dece.zip";
	case Applicationvnddenovofcselayoutlink = "application/vnd.denovo.fcselayout-link";
	case Applicationvnddesmumemovie = "application/vnd.desmume.movie";
	case Applicationvnddirbiplatedlnosuffix = "application/vnd.dir-bi.plate-dl-nosuffix";
	case Applicationvnddmdelegationxml = "application/vnd.dm.delegation+xml";
	case Applicationvnddna = "application/vnd.dna";
	case Applicationvnddocumentjson = "application/vnd.document+json";
	case Applicationvnddolbymobile1 = "application/vnd.dolby.mobile.1";
	case Applicationvnddolbymobile2 = "application/vnd.dolby.mobile.2";
	case Applicationvnddoremirscorecloudbinarydocument = "application/vnd.doremir.scorecloud-binary-document";
	case Applicationvnddpgraph = "application/vnd.dpgraph";
	case Applicationvnddreamfactory = "application/vnd.dreamfactory";
	case Applicationvnddrivejson = "application/vnd.drive+json";
	case Applicationvnddtglocal = "application/vnd.dtg.local";
	case Applicationvnddtglocalflash = "application/vnd.dtg.local.flash";
	case Applicationvnddtglocalhtml = "application/vnd.dtg.local.html";
	case Applicationvnddvbait = "application/vnd.dvb.ait";
	case Applicationvnddvbdvbislxml = "application/vnd.dvb.dvbisl+xml";
	case Applicationvnddvbdvbj = "application/vnd.dvb.dvbj";
	case Applicationvnddvbesgcontainer = "application/vnd.dvb.esgcontainer";
	case Applicationvnddvbipdcdftnotifaccess = "application/vnd.dvb.ipdcdftnotifaccess";
	case Applicationvnddvbipdcesgaccess = "application/vnd.dvb.ipdcesgaccess";
	case Applicationvnddvbipdcesgaccess2 = "application/vnd.dvb.ipdcesgaccess2";
	case Applicationvnddvbipdcesgpdd = "application/vnd.dvb.ipdcesgpdd";
	case Applicationvnddvbipdcroaming = "application/vnd.dvb.ipdcroaming";
	case Applicationvnddvbiptvalfecbase = "application/vnd.dvb.iptv.alfec-base";
	case Applicationvnddvbiptvalfecenhancement = "application/vnd.dvb.iptv.alfec-enhancement";
	case Applicationvnddvbnotifaggregaterootxml = "application/vnd.dvb.notif-aggregate-root+xml";
	case Applicationvnddvbnotifcontainerxml = "application/vnd.dvb.notif-container+xml";
	case Applicationvnddvbnotifgenericxml = "application/vnd.dvb.notif-generic+xml";
	case Applicationvnddvbnotifiamsglistxml = "application/vnd.dvb.notif-ia-msglist+xml";
	case Applicationvnddvbnotifiaregistrationrequestxml = "application/vnd.dvb.notif-ia-registration-request+xml";
	case Applicationvnddvbnotifiaregistrationresponsexml = "application/vnd.dvb.notif-ia-registration-response+xml";
	case Applicationvnddvbnotifinitxml = "application/vnd.dvb.notif-init+xml";
	case Applicationvnddvbpfr = "application/vnd.dvb.pfr";
	case Applicationvnddvbservice = "application/vnd.dvb.service";
	case Applicationvnddxr = "application/vnd.dxr";
	case Applicationvnddynageo = "application/vnd.dynageo";
	case Applicationvnddzr = "application/vnd.dzr";
	case Applicationvndeasykaraokecdgdownload = "application/vnd.easykaraoke.cdgdownload";
	case Applicationvndeciprlp = "application/vnd.ecip.rlp";
	case Applicationvndecdisupdate = "application/vnd.ecdis-update";
	case Applicationvndecowinchart = "application/vnd.ecowin.chart";
	case Applicationvndecowinfilerequest = "application/vnd.ecowin.filerequest";
	case Applicationvndecowinfileupdate = "application/vnd.ecowin.fileupdate";
	case Applicationvndecowinseries = "application/vnd.ecowin.series";
	case Applicationvndecowinseriesrequest = "application/vnd.ecowin.seriesrequest";
	case Applicationvndecowinseriesupdate = "application/vnd.ecowin.seriesupdate";
	case Applicationvndefiimg = "application/vnd.efi.img";
	case Applicationvndefiiso = "application/vnd.efi.iso";
	case Applicationvndemclientaccessrequestxml = "application/vnd.emclient.accessrequest+xml";
	case Applicationvndenliven = "application/vnd.enliven";
	case Applicationvndenphaseenvoy = "application/vnd.enphase.envoy";
	case Applicationvndeprintsdataxml = "application/vnd.eprints.data+xml";
	case Applicationvndepsonesf = "application/vnd.epson.esf";
	case Applicationvndepsonmsf = "application/vnd.epson.msf";
	case Applicationvndepsonquickanime = "application/vnd.epson.quickanime";
	case Applicationvndepsonsalt = "application/vnd.epson.salt";
	case Applicationvndepsonssf = "application/vnd.epson.ssf";
	case Applicationvndericssonquickcall = "application/vnd.ericsson.quickcall";
	case Applicationvndespassespasszip = "application/vnd.espass-espass+zip";
	case Applicationvndeszigno3xml = "application/vnd.eszigno3+xml";
	case Applicationvndetsiaocxml = "application/vnd.etsi.aoc+xml";
	case Applicationvndetsiasicszip = "application/vnd.etsi.asic-s+zip";
	case Applicationvndetsiasicezip = "application/vnd.etsi.asic-e+zip";
	case Applicationvndetsicugxml = "application/vnd.etsi.cug+xml";
	case Applicationvndetsiiptvcommandxml = "application/vnd.etsi.iptvcommand+xml";
	case Applicationvndetsiiptvdiscoveryxml = "application/vnd.etsi.iptvdiscovery+xml";
	case Applicationvndetsiiptvprofilexml = "application/vnd.etsi.iptvprofile+xml";
	case Applicationvndetsiiptvsadbcxml = "application/vnd.etsi.iptvsad-bc+xml";
	case Applicationvndetsiiptvsadcodxml = "application/vnd.etsi.iptvsad-cod+xml";
	case Applicationvndetsiiptvsadnpvrxml = "application/vnd.etsi.iptvsad-npvr+xml";
	case Applicationvndetsiiptvservicexml = "application/vnd.etsi.iptvservice+xml";
	case Applicationvndetsiiptvsyncxml = "application/vnd.etsi.iptvsync+xml";
	case Applicationvndetsiiptvueprofilexml = "application/vnd.etsi.iptvueprofile+xml";
	case Applicationvndetsimcidxml = "application/vnd.etsi.mcid+xml";
	case Applicationvndetsimheg5 = "application/vnd.etsi.mheg5";
	case Applicationvndetsioverloadcontrolpolicydatasetxml = "application/vnd.etsi.overload-control-policy-dataset+xml";
	case Applicationvndetsipstnxml = "application/vnd.etsi.pstn+xml";
	case Applicationvndetsiscixml = "application/vnd.etsi.sci+xml";
	case Applicationvndetsisimservsxml = "application/vnd.etsi.simservs+xml";
	case Applicationvndetsitimestamptoken = "application/vnd.etsi.timestamp-token";
	case Applicationvndetsitslxml = "application/vnd.etsi.tsl+xml";
	case Applicationvndetsitslder = "application/vnd.etsi.tsl.der";
	case Applicationvndevolvecigprofile = "application/vnd.evolv.ecig.profile";
	case Applicationvndevolvecigsettings = "application/vnd.evolv.ecig.settings";
	case Applicationvndevolvecigtheme = "application/vnd.evolv.ecig.theme";
	case Applicationvndeudoradata = "application/vnd.eudora.data";
	case Applicationvndexstreamempowerzip = "application/vnd.exstream-empower+zip";
	case Applicationvndexstreampackage = "application/vnd.exstream-package";
	case Applicationvndezpixalbum = "application/vnd.ezpix-album";
	case Applicationvndezpixpackage = "application/vnd.ezpix-package";
	case Applicationvndfsecuremobile = "application/vnd.f-secure.mobile";
	case Applicationvndfastcopydiskimage = "application/vnd.fastcopy-disk-image";
	case Applicationvndfdf = "application/vnd.fdf";
	case Applicationvndfdsnmseed = "application/vnd.fdsn.mseed";
	case Applicationvndfdsnseed = "application/vnd.fdsn.seed";
	case Applicationvndffsns = "application/vnd.ffsns";
	case Applicationvndficlabflbzip = "application/vnd.ficlab.flb+zip";
	case Applicationvndfilmitzfc = "application/vnd.filmit.zfc";
	case Applicationvndfints = "application/vnd.fints";
	case Applicationvndfiremonkeyscloudcell = "application/vnd.firemonkeys.cloudcell";
	case ApplicationvndFloGraphIt = "application/vnd.FloGraphIt";
	case Applicationvndfluxtimeclip = "application/vnd.fluxtime.clip";
	case Applicationvndfontfontforgesfd = "application/vnd.font-fontforge-sfd";
	case Applicationvndframemaker = "application/vnd.framemaker";
	case Applicationvndfscweblaunch = "application/vnd.fsc.weblaunch";
	case Applicationvndfujifilmfbdocuworks = "application/vnd.fujifilm.fb.docuworks";
	case Applicationvndfujifilmfbdocuworksbinder = "application/vnd.fujifilm.fb.docuworks.binder";
	case Applicationvndfujifilmfbdocuworkscontainer = "application/vnd.fujifilm.fb.docuworks.container";
	case Applicationvndfujifilmfbjfixml = "application/vnd.fujifilm.fb.jfi+xml";
	case Applicationvndfujitsuoasys = "application/vnd.fujitsu.oasys";
	case Applicationvndfujitsuoasys2 = "application/vnd.fujitsu.oasys2";
	case Applicationvndfujitsuoasys3 = "application/vnd.fujitsu.oasys3";
	case Applicationvndfujitsuoasysgp = "application/vnd.fujitsu.oasysgp";
	case Applicationvndfujitsuoasysprs = "application/vnd.fujitsu.oasysprs";
	case ApplicationvndfujixeroxART4 = "application/vnd.fujixerox.ART4";
	case ApplicationvndfujixeroxARTEX = "application/vnd.fujixerox.ART-EX";
	case Applicationvndfujixeroxddd = "application/vnd.fujixerox.ddd";
	case Applicationvndfujixeroxdocuworks = "application/vnd.fujixerox.docuworks";
	case Applicationvndfujixeroxdocuworksbinder = "application/vnd.fujixerox.docuworks.binder";
	case Applicationvndfujixeroxdocuworkscontainer = "application/vnd.fujixerox.docuworks.container";
	case ApplicationvndfujixeroxHBPL = "application/vnd.fujixerox.HBPL";
	case Applicationvndfutmisnet = "application/vnd.fut-misnet";
	case Applicationvndfutoincbor = "application/vnd.futoin+cbor";
	case Applicationvndfutoinjson = "application/vnd.futoin+json";
	case Applicationvndfuzzysheet = "application/vnd.fuzzysheet";
	case Applicationvndgenomatixtuxedo = "application/vnd.genomatix.tuxedo";
	case Applicationvndgenticsgrdjson = "application/vnd.gentics.grd+json";
	case Applicationvndgeogebrafile = "application/vnd.geogebra.file";
	case Applicationvndgeogebraslides = "application/vnd.geogebra.slides";
	case Applicationvndgeogebratool = "application/vnd.geogebra.tool";
	case Applicationvndgeometryexplorer = "application/vnd.geometry-explorer";
	case Applicationvndgeonext = "application/vnd.geonext";
	case Applicationvndgeoplan = "application/vnd.geoplan";
	case Applicationvndgeospace = "application/vnd.geospace";
	case Applicationvndgerber = "application/vnd.gerber";
	case Applicationvndglobalplatformcardcontentmgt = "application/vnd.globalplatform.card-content-mgt";
	case Applicationvndglobalplatformcardcontentmgtresponse = "application/vnd.globalplatform.card-content-mgt-response";
	case Applicationvndgoogleearthkmlxml = "application/vnd.google-earth.kml+xml";
	case Applicationvndgoogleearthkmz = "application/vnd.google-earth.kmz";
	case Applicationvndgovskeformxml = "application/vnd.gov.sk.e-form+xml";
	case Applicationvndgovskeformzip = "application/vnd.gov.sk.e-form+zip";
	case Applicationvndgovskxmldatacontainerxml = "application/vnd.gov.sk.xmldatacontainer+xml";
	case Applicationvndgrafeq = "application/vnd.grafeq";
	case Applicationvndgridmp = "application/vnd.gridmp";
	case Applicationvndgrooveaccount = "application/vnd.groove-account";
	case Applicationvndgroovehelp = "application/vnd.groove-help";
	case Applicationvndgrooveidentitymessage = "application/vnd.groove-identity-message";
	case Applicationvndgrooveinjector = "application/vnd.groove-injector";
	case Applicationvndgroovetoolmessage = "application/vnd.groove-tool-message";
	case Applicationvndgroovetooltemplate = "application/vnd.groove-tool-template";
	case Applicationvndgroovevcard = "application/vnd.groove-vcard";
	case Applicationvndhaljson = "application/vnd.hal+json";
	case Applicationvndhalxml = "application/vnd.hal+xml";
	case ApplicationvndHandHeldEntertainmentxml = "application/vnd.HandHeld-Entertainment+xml";
	case Applicationvndhbci = "application/vnd.hbci";
	case Applicationvndhcjson = "application/vnd.hc+json";
	case Applicationvndhclbireports = "application/vnd.hcl-bireports";
	case Applicationvndhdt = "application/vnd.hdt";
	case Applicationvndherokujson = "application/vnd.heroku+json";
	case Applicationvndhhelessonplayer = "application/vnd.hhe.lesson-player";
	case ApplicationvndhpHPGL = "application/vnd.hp-HPGL";
	case Applicationvndhphpid = "application/vnd.hp-hpid";
	case Applicationvndhphps = "application/vnd.hp-hps";
	case Applicationvndhpjlyt = "application/vnd.hp-jlyt";
	case ApplicationvndhpPCL = "application/vnd.hp-PCL";
	case ApplicationvndhpPCLXL = "application/vnd.hp-PCLXL";
	case Applicationvndhttphone = "application/vnd.httphone";
	case Applicationvndhydrostatixsofdata = "application/vnd.hydrostatix.sof-data";
	case Applicationvndhyperitemjson = "application/vnd.hyper-item+json";
	case Applicationvndhyperjson = "application/vnd.hyper+json";
	case Applicationvndhyperdrivejson = "application/vnd.hyperdrive+json";
	case Applicationvndhzn3dcrossword = "application/vnd.hzn-3d-crossword";
	case Applicationvndibmelectronicmedia = "application/vnd.ibm.electronic-media";
	case ApplicationvndibmMiniPay = "application/vnd.ibm.MiniPay";
	case Applicationvndibmrightsmanagement = "application/vnd.ibm.rights-management";
	case Applicationvndibmsecurecontainer = "application/vnd.ibm.secure-container";
	case Applicationvndiccprofile = "application/vnd.iccprofile";
	case Applicationvndieee1905 = "application/vnd.ieee.1905";
	case Applicationvndigloader = "application/vnd.igloader";
	case Applicationvndimagemeterfolderzip = "application/vnd.imagemeter.folder+zip";
	case Applicationvndimagemeterimagezip = "application/vnd.imagemeter.image+zip";
	case Applicationvndimmervisionivp = "application/vnd.immervision-ivp";
	case Applicationvndimmervisionivu = "application/vnd.immervision-ivu";
	case Applicationvndimsimsccv1p1 = "application/vnd.ims.imsccv1p1";
	case Applicationvndimsimsccv1p2 = "application/vnd.ims.imsccv1p2";
	case Applicationvndimsimsccv1p3 = "application/vnd.ims.imsccv1p3";
	case Applicationvndimslisv2resultjson = "application/vnd.ims.lis.v2.result+json";
	case Applicationvndimsltiv2toolconsumerprofilejson = "application/vnd.ims.lti.v2.toolconsumerprofile+json";
	case Applicationvndimsltiv2toolproxyidjson = "application/vnd.ims.lti.v2.toolproxy.id+json";
	case Applicationvndimsltiv2toolproxyjson = "application/vnd.ims.lti.v2.toolproxy+json";
	case Applicationvndimsltiv2toolsettingsjson = "application/vnd.ims.lti.v2.toolsettings+json";
	case Applicationvndimsltiv2toolsettingssimplejson = "application/vnd.ims.lti.v2.toolsettings.simple+json";
	case Applicationvndinformedcontrolrmsxml = "application/vnd.informedcontrol.rms+xml";
	case Applicationvndinfotechproject = "application/vnd.infotech.project";
	case Applicationvndinfotechprojectxml = "application/vnd.infotech.project+xml";
	case Applicationvndinnopathwampnotification = "application/vnd.innopath.wamp.notification";
	case Applicationvndinsorsigm = "application/vnd.insors.igm";
	case Applicationvndinterconformnet = "application/vnd.intercon.formnet";
	case Applicationvndintergeo = "application/vnd.intergeo";
	case Applicationvndintertrustdigibox = "application/vnd.intertrust.digibox";
	case Applicationvndintertrustnncp = "application/vnd.intertrust.nncp";
	case Applicationvndintuqbo = "application/vnd.intu.qbo";
	case Applicationvndintuqfx = "application/vnd.intu.qfx";
	case Applicationvndiptcg2catalogitemxml = "application/vnd.iptc.g2.catalogitem+xml";
	case Applicationvndiptcg2conceptitemxml = "application/vnd.iptc.g2.conceptitem+xml";
	case Applicationvndiptcg2knowledgeitemxml = "application/vnd.iptc.g2.knowledgeitem+xml";
	case Applicationvndiptcg2newsitemxml = "application/vnd.iptc.g2.newsitem+xml";
	case Applicationvndiptcg2newsmessagexml = "application/vnd.iptc.g2.newsmessage+xml";
	case Applicationvndiptcg2packageitemxml = "application/vnd.iptc.g2.packageitem+xml";
	case Applicationvndiptcg2planningitemxml = "application/vnd.iptc.g2.planningitem+xml";
	case Applicationvndipunpluggedrcprofile = "application/vnd.ipunplugged.rcprofile";
	case Applicationvndirepositorypackagexml = "application/vnd.irepository.package+xml";
	case Applicationvndisxpr = "application/vnd.is-xpr";
	case Applicationvndisacfcs = "application/vnd.isac.fcs";
	case Applicationvndjam = "application/vnd.jam";
	case Applicationvndiso1178310zip = "application/vnd.iso11783-10+zip";
	case Applicationvndjapannetdirectoryservice = "application/vnd.japannet-directory-service";
	case Applicationvndjapannetjpnstorewakeup = "application/vnd.japannet-jpnstore-wakeup";
	case Applicationvndjapannetpaymentwakeup = "application/vnd.japannet-payment-wakeup";
	case Applicationvndjapannetregistration = "application/vnd.japannet-registration";
	case Applicationvndjapannetregistrationwakeup = "application/vnd.japannet-registration-wakeup";
	case Applicationvndjapannetsetstorewakeup = "application/vnd.japannet-setstore-wakeup";
	case Applicationvndjapannetverification = "application/vnd.japannet-verification";
	case Applicationvndjapannetverificationwakeup = "application/vnd.japannet-verification-wakeup";
	case Applicationvndjcpjavamemidletrms = "application/vnd.jcp.javame.midlet-rms";
	case Applicationvndjisp = "application/vnd.jisp";
	case Applicationvndjoostjodaarchive = "application/vnd.joost.joda-archive";
	case Applicationvndjskisdnngn = "application/vnd.jsk.isdn-ngn";
	case Applicationvndkahootz = "application/vnd.kahootz";
	case Applicationvndkdekarbon = "application/vnd.kde.karbon";
	case Applicationvndkdekchart = "application/vnd.kde.kchart";
	case Applicationvndkdekformula = "application/vnd.kde.kformula";
	case Applicationvndkdekivio = "application/vnd.kde.kivio";
	case Applicationvndkdekontour = "application/vnd.kde.kontour";
	case Applicationvndkdekpresenter = "application/vnd.kde.kpresenter";
	case Applicationvndkdekspread = "application/vnd.kde.kspread";
	case Applicationvndkdekword = "application/vnd.kde.kword";
	case Applicationvndkenameaapp = "application/vnd.kenameaapp";
	case Applicationvndkidspiration = "application/vnd.kidspiration";
	case ApplicationvndKinar = "application/vnd.Kinar";
	case Applicationvndkoan = "application/vnd.koan";
	case Applicationvndkodakdescriptor = "application/vnd.kodak-descriptor";
	case Applicationvndlas = "application/vnd.las";
	case Applicationvndlaslasjson = "application/vnd.las.las+json";
	case Applicationvndlaslasxml = "application/vnd.las.las+xml";
	case Applicationvndlaszip = "application/vnd.laszip";
	case Applicationvndleapjson = "application/vnd.leap+json";
	case Applicationvndlibertyrequestxml = "application/vnd.liberty-request+xml";
	case Applicationvndllamagraphicslifebalancedesktop = "application/vnd.llamagraphics.life-balance.desktop";
	case Applicationvndllamagraphicslifebalanceexchangexml = "application/vnd.llamagraphics.life-balance.exchange+xml";
	case Applicationvndlogipipecircuitzip = "application/vnd.logipipe.circuit+zip";
	case Applicationvndloom = "application/vnd.loom";
	case Applicationvndlotus123 = "application/vnd.lotus-1-2-3";
	case Applicationvndlotusapproach = "application/vnd.lotus-approach";
	case Applicationvndlotusfreelance = "application/vnd.lotus-freelance";
	case Applicationvndlotusnotes = "application/vnd.lotus-notes";
	case Applicationvndlotusorganizer = "application/vnd.lotus-organizer";
	case Applicationvndlotusscreencam = "application/vnd.lotus-screencam";
	case Applicationvndlotuswordpro = "application/vnd.lotus-wordpro";
	case Applicationvndmacportsportpkg = "application/vnd.macports.portpkg";
	case Applicationvndmapboxvectortile = "application/vnd.mapbox-vector-tile";
	case Applicationvndmarlindrmactiontokenxml = "application/vnd.marlin.drm.actiontoken+xml";
	case Applicationvndmarlindrmconftokenxml = "application/vnd.marlin.drm.conftoken+xml";
	case Applicationvndmarlindrmlicensexml = "application/vnd.marlin.drm.license+xml";
	case Applicationvndmarlindrmmdcf = "application/vnd.marlin.drm.mdcf";
	case Applicationvndmasonjson = "application/vnd.mason+json";
	case Applicationvndmaxmindmaxminddb = "application/vnd.maxmind.maxmind-db";
	case Applicationvndmcd = "application/vnd.mcd";
	case Applicationvndmedcalcdata = "application/vnd.medcalcdata";
	case Applicationvndmediastationcdkey = "application/vnd.mediastation.cdkey";
	case Applicationvndmeridianslingshot = "application/vnd.meridian-slingshot";
	case ApplicationvndMFER = "application/vnd.MFER";
	case Applicationvndmfmp = "application/vnd.mfmp";
	case Applicationvndmicrojson = "application/vnd.micro+json";
	case Applicationvndmicrografxflo = "application/vnd.micrografx.flo";
	case Applicationvndmicrografxigx = "application/vnd.micrografx.igx";
	case Applicationvndmicrosoftportableexecutable = "application/vnd.microsoft.portable-executable";
	case Applicationvndmicrosoftwindowsthumbnailcache = "application/vnd.microsoft.windows.thumbnail-cache";
	case Applicationvndmielejson = "application/vnd.miele+json";
	case Applicationvndmif = "application/vnd.mif";
	case Applicationvndminisofthp3000save = "application/vnd.minisoft-hp3000-save";
	case Applicationvndmitsubishimistyguardtrustweb = "application/vnd.mitsubishi.misty-guard.trustweb";
	case ApplicationvndMobiusDAF = "application/vnd.Mobius.DAF";
	case ApplicationvndMobiusDIS = "application/vnd.Mobius.DIS";
	case ApplicationvndMobiusMBK = "application/vnd.Mobius.MBK";
	case ApplicationvndMobiusMQY = "application/vnd.Mobius.MQY";
	case ApplicationvndMobiusMSL = "application/vnd.Mobius.MSL";
	case ApplicationvndMobiusPLC = "application/vnd.Mobius.PLC";
	case ApplicationvndMobiusTXF = "application/vnd.Mobius.TXF";
	case Applicationvndmophunapplication = "application/vnd.mophun.application";
	case Applicationvndmophuncertificate = "application/vnd.mophun.certificate";
	case Applicationvndmotorolaflexsuite = "application/vnd.motorola.flexsuite";
	case Applicationvndmotorolaflexsuiteadsi = "application/vnd.motorola.flexsuite.adsi";
	case Applicationvndmotorolaflexsuitefis = "application/vnd.motorola.flexsuite.fis";
	case Applicationvndmotorolaflexsuitegotap = "application/vnd.motorola.flexsuite.gotap";
	case Applicationvndmotorolaflexsuitekmr = "application/vnd.motorola.flexsuite.kmr";
	case Applicationvndmotorolaflexsuitettc = "application/vnd.motorola.flexsuite.ttc";
	case Applicationvndmotorolaflexsuitewem = "application/vnd.motorola.flexsuite.wem";
	case Applicationvndmotorolaiprm = "application/vnd.motorola.iprm";
	case Applicationvndmozillaxulxml = "application/vnd.mozilla.xul+xml";
	case Applicationvndmsartgalry = "application/vnd.ms-artgalry";
	case Applicationvndmsasf = "application/vnd.ms-asf";
	case Applicationvndmscabcompressed = "application/vnd.ms-cab-compressed";
	case Applicationvndms3mfdocument = "application/vnd.ms-3mfdocument";
	case Applicationvndmsexcel = "application/vnd.ms-excel";
	case ApplicationvndmsexceladdinmacroEnabled12 = "application/vnd.ms-excel.addin.macroEnabled.12";
	case ApplicationvndmsexcelsheetbinarymacroEnabled12 = "application/vnd.ms-excel.sheet.binary.macroEnabled.12";
	case ApplicationvndmsexcelsheetmacroEnabled12 = "application/vnd.ms-excel.sheet.macroEnabled.12";
	case ApplicationvndmsexceltemplatemacroEnabled12 = "application/vnd.ms-excel.template.macroEnabled.12";
	case Applicationvndmsfontobject = "application/vnd.ms-fontobject";
	case Applicationvndmshtmlhelp = "application/vnd.ms-htmlhelp";
	case Applicationvndmsims = "application/vnd.ms-ims";
	case Applicationvndmslrm = "application/vnd.ms-lrm";
	case ApplicationvndmsofficeactiveXxml = "application/vnd.ms-office.activeX+xml";
	case Applicationvndmsofficetheme = "application/vnd.ms-officetheme";
	case Applicationvndmsplayreadyinitiatorxml = "application/vnd.ms-playready.initiator+xml";
	case Applicationvndmspowerpoint = "application/vnd.ms-powerpoint";
	case ApplicationvndmspowerpointaddinmacroEnabled12 = "application/vnd.ms-powerpoint.addin.macroEnabled.12";
	case ApplicationvndmspowerpointpresentationmacroEnabled12 = "application/vnd.ms-powerpoint.presentation.macroEnabled.12";
	case ApplicationvndmspowerpointslidemacroEnabled12 = "application/vnd.ms-powerpoint.slide.macroEnabled.12";
	case ApplicationvndmspowerpointslideshowmacroEnabled12 = "application/vnd.ms-powerpoint.slideshow.macroEnabled.12";
	case ApplicationvndmspowerpointtemplatemacroEnabled12 = "application/vnd.ms-powerpoint.template.macroEnabled.12";
	case ApplicationvndmsPrintDeviceCapabilitiesxml = "application/vnd.ms-PrintDeviceCapabilities+xml";
	case ApplicationvndmsPrintSchemaTicketxml = "application/vnd.ms-PrintSchemaTicket+xml";
	case Applicationvndmsproject = "application/vnd.ms-project";
	case Applicationvndmstnef = "application/vnd.ms-tnef";
	case Applicationvndmswindowsdevicepairing = "application/vnd.ms-windows.devicepairing";
	case Applicationvndmswindowsnwprintingoob = "application/vnd.ms-windows.nwprinting.oob";
	case Applicationvndmswindowsprinterpairing = "application/vnd.ms-windows.printerpairing";
	case Applicationvndmswindowswsdoob = "application/vnd.ms-windows.wsd.oob";
	case Applicationvndmswmdrmlicchlgreq = "application/vnd.ms-wmdrm.lic-chlg-req";
	case Applicationvndmswmdrmlicresp = "application/vnd.ms-wmdrm.lic-resp";
	case Applicationvndmswmdrmmeterchlgreq = "application/vnd.ms-wmdrm.meter-chlg-req";
	case Applicationvndmswmdrmmeterresp = "application/vnd.ms-wmdrm.meter-resp";
	case ApplicationvndmsworddocumentmacroEnabled12 = "application/vnd.ms-word.document.macroEnabled.12";
	case ApplicationvndmswordtemplatemacroEnabled12 = "application/vnd.ms-word.template.macroEnabled.12";
	case Applicationvndmsworks = "application/vnd.ms-works";
	case Applicationvndmswpl = "application/vnd.ms-wpl";
	case Applicationvndmsxpsdocument = "application/vnd.ms-xpsdocument";
	case Applicationvndmsadiskimage = "application/vnd.msa-disk-image";
	case Applicationvndmseq = "application/vnd.mseq";
	case Applicationvndmsign = "application/vnd.msign";
	case Applicationvndmultiadcreator = "application/vnd.multiad.creator";
	case Applicationvndmultiadcreatorcif = "application/vnd.multiad.creator.cif";
	case Applicationvndmusician = "application/vnd.musician";
	case Applicationvndmusicniff = "application/vnd.music-niff";
	case Applicationvndmuveestyle = "application/vnd.muvee.style";
	case Applicationvndmynfc = "application/vnd.mynfc";
	case Applicationvndnacamarybridjson = "application/vnd.nacamar.ybrid+json";
	case Applicationvndncdcontrol = "application/vnd.ncd.control";
	case Applicationvndncdreference = "application/vnd.ncd.reference";
	case Applicationvndnearstinvjson = "application/vnd.nearst.inv+json";
	case Applicationvndnebumindline = "application/vnd.nebumind.line";
	case Applicationvndnervana = "application/vnd.nervana";
	case Applicationvndnetfpx = "application/vnd.netfpx";
	case Applicationvndneurolanguagenlu = "application/vnd.neurolanguage.nlu";
	case Applicationvndnimn = "application/vnd.nimn";
	case Applicationvndnintendosnesrom = "application/vnd.nintendo.snes.rom";
	case Applicationvndnintendonitrorom = "application/vnd.nintendo.nitro.rom";
	case Applicationvndnitf = "application/vnd.nitf";
	case Applicationvndnoblenetdirectory = "application/vnd.noblenet-directory";
	case Applicationvndnoblenetsealer = "application/vnd.noblenet-sealer";
	case Applicationvndnoblenetweb = "application/vnd.noblenet-web";
	case Applicationvndnokiacatalogs = "application/vnd.nokia.catalogs";
	case Applicationvndnokiaconmlwbxml = "application/vnd.nokia.conml+wbxml";
	case Applicationvndnokiaconmlxml = "application/vnd.nokia.conml+xml";
	case Applicationvndnokiaiptvconfigxml = "application/vnd.nokia.iptv.config+xml";
	case ApplicationvndnokiaiSDSradiopresets = "application/vnd.nokia.iSDS-radio-presets";
	case Applicationvndnokialandmarkwbxml = "application/vnd.nokia.landmark+wbxml";
	case Applicationvndnokialandmarkxml = "application/vnd.nokia.landmark+xml";
	case Applicationvndnokialandmarkcollectionxml = "application/vnd.nokia.landmarkcollection+xml";
	case Applicationvndnokiancd = "application/vnd.nokia.ncd";
	case Applicationvndnokiangageacxml = "application/vnd.nokia.n-gage.ac+xml";
	case Applicationvndnokiangagedata = "application/vnd.nokia.n-gage.data";
	case Applicationvndnokiapcdwbxml = "application/vnd.nokia.pcd+wbxml";
	case Applicationvndnokiapcdxml = "application/vnd.nokia.pcd+xml";
	case Applicationvndnokiaradiopreset = "application/vnd.nokia.radio-preset";
	case Applicationvndnokiaradiopresets = "application/vnd.nokia.radio-presets";
	case ApplicationvndnovadigmEDM = "application/vnd.novadigm.EDM";
	case ApplicationvndnovadigmEDX = "application/vnd.novadigm.EDX";
	case ApplicationvndnovadigmEXT = "application/vnd.novadigm.EXT";
	case Applicationvndnttlocalcontentshare = "application/vnd.ntt-local.content-share";
	case Applicationvndnttlocalfiletransfer = "application/vnd.ntt-local.file-transfer";
	case Applicationvndnttlocalogw_remoteaccess = "application/vnd.ntt-local.ogw_remote-access";
	case Applicationvndnttlocalsipta_remote = "application/vnd.ntt-local.sip-ta_remote";
	case Applicationvndnttlocalsipta_tcp_stream = "application/vnd.ntt-local.sip-ta_tcp_stream";
	case Applicationvndoasisopendocumentchart = "application/vnd.oasis.opendocument.chart";
	case Applicationvndoasisopendocumentcharttemplate = "application/vnd.oasis.opendocument.chart-template";
	case Applicationvndoasisopendocumentdatabase = "application/vnd.oasis.opendocument.database";
	case Applicationvndoasisopendocumentformula = "application/vnd.oasis.opendocument.formula";
	case Applicationvndoasisopendocumentformulatemplate = "application/vnd.oasis.opendocument.formula-template";
	case Applicationvndoasisopendocumentgraphics = "application/vnd.oasis.opendocument.graphics";
	case Applicationvndoasisopendocumentgraphicstemplate = "application/vnd.oasis.opendocument.graphics-template";
	case Applicationvndoasisopendocumentimage = "application/vnd.oasis.opendocument.image";
	case Applicationvndoasisopendocumentimagetemplate = "application/vnd.oasis.opendocument.image-template";
	case Applicationvndoasisopendocumentpresentation = "application/vnd.oasis.opendocument.presentation";
	case Applicationvndoasisopendocumentpresentationtemplate = "application/vnd.oasis.opendocument.presentation-template";
	case Applicationvndoasisopendocumentspreadsheet = "application/vnd.oasis.opendocument.spreadsheet";
	case Applicationvndoasisopendocumentspreadsheettemplate = "application/vnd.oasis.opendocument.spreadsheet-template";
	case Applicationvndoasisopendocumenttext = "application/vnd.oasis.opendocument.text";
	case Applicationvndoasisopendocumenttextmaster = "application/vnd.oasis.opendocument.text-master";
	case Applicationvndoasisopendocumenttexttemplate = "application/vnd.oasis.opendocument.text-template";
	case Applicationvndoasisopendocumenttextweb = "application/vnd.oasis.opendocument.text-web";
	case Applicationvndobn = "application/vnd.obn";
	case Applicationvndocfcbor = "application/vnd.ocf+cbor";
	case Applicationvndociimagemanifestv1json = "application/vnd.oci.image.manifest.v1+json";
	case Applicationvndoftnl10njson = "application/vnd.oftn.l10n+json";
	case Applicationvndoipfcontentaccessdownloadxml = "application/vnd.oipf.contentaccessdownload+xml";
	case Applicationvndoipfcontentaccessstreamingxml = "application/vnd.oipf.contentaccessstreaming+xml";
	case Applicationvndoipfcspghexbinary = "application/vnd.oipf.cspg-hexbinary";
	case Applicationvndoipfdaesvgxml = "application/vnd.oipf.dae.svg+xml";
	case Applicationvndoipfdaexhtmlxml = "application/vnd.oipf.dae.xhtml+xml";
	case Applicationvndoipfmippvcontrolmessagexml = "application/vnd.oipf.mippvcontrolmessage+xml";
	case Applicationvndoipfpaegem = "application/vnd.oipf.pae.gem";
	case Applicationvndoipfspdiscoveryxml = "application/vnd.oipf.spdiscovery+xml";
	case Applicationvndoipfspdlistxml = "application/vnd.oipf.spdlist+xml";
	case Applicationvndoipfueprofilexml = "application/vnd.oipf.ueprofile+xml";
	case Applicationvndoipfuserprofilexml = "application/vnd.oipf.userprofile+xml";
	case Applicationvndolpcsugar = "application/vnd.olpc-sugar";
	case Applicationvndomabcastassociatedprocedureparameterxml = "application/vnd.oma.bcast.associated-procedure-parameter+xml";
	case Applicationvndomabcastdrmtriggerxml = "application/vnd.oma.bcast.drm-trigger+xml";
	case Applicationvndomabcastimdxml = "application/vnd.oma.bcast.imd+xml";
	case Applicationvndomabcastltkm = "application/vnd.oma.bcast.ltkm";
	case Applicationvndomabcastnotificationxml = "application/vnd.oma.bcast.notification+xml";
	case Applicationvndomabcastprovisioningtrigger = "application/vnd.oma.bcast.provisioningtrigger";
	case Applicationvndomabcastsgboot = "application/vnd.oma.bcast.sgboot";
	case Applicationvndomabcastsgddxml = "application/vnd.oma.bcast.sgdd+xml";
	case Applicationvndomabcastsgdu = "application/vnd.oma.bcast.sgdu";
	case Applicationvndomabcastsimplesymbolcontainer = "application/vnd.oma.bcast.simple-symbol-container";
	case Applicationvndomabcastsmartcardtriggerxml = "application/vnd.oma.bcast.smartcard-trigger+xml";
	case Applicationvndomabcastsprovxml = "application/vnd.oma.bcast.sprov+xml";
	case Applicationvndomabcaststkm = "application/vnd.oma.bcast.stkm";
	case Applicationvndomacabaddressbookxml = "application/vnd.oma.cab-address-book+xml";
	case Applicationvndomacabfeaturehandlerxml = "application/vnd.oma.cab-feature-handler+xml";
	case Applicationvndomacabpccxml = "application/vnd.oma.cab-pcc+xml";
	case Applicationvndomacabsubsinvitexml = "application/vnd.oma.cab-subs-invite+xml";
	case Applicationvndomacabuserprefsxml = "application/vnd.oma.cab-user-prefs+xml";
	case Applicationvndomadcd = "application/vnd.oma.dcd";
	case Applicationvndomadcdc = "application/vnd.oma.dcdc";
	case Applicationvndomadd2xml = "application/vnd.oma.dd2+xml";
	case Applicationvndomadrmrisdxml = "application/vnd.oma.drm.risd+xml";
	case Applicationvndomagroupusagelistxml = "application/vnd.oma.group-usage-list+xml";
	case Applicationvndomalwm2mcbor = "application/vnd.oma.lwm2m+cbor";
	case Applicationvndomalwm2mjson = "application/vnd.oma.lwm2m+json";
	case Applicationvndomalwm2mtlv = "application/vnd.oma.lwm2m+tlv";
	case Applicationvndomapalxml = "application/vnd.oma.pal+xml";
	case Applicationvndomapocdetailedprogressreportxml = "application/vnd.oma.poc.detailed-progress-report+xml";
	case Applicationvndomapocfinalreportxml = "application/vnd.oma.poc.final-report+xml";
	case Applicationvndomapocgroupsxml = "application/vnd.oma.poc.groups+xml";
	case Applicationvndomapocinvocationdescriptorxml = "application/vnd.oma.poc.invocation-descriptor+xml";
	case Applicationvndomapocoptimizedprogressreportxml = "application/vnd.oma.poc.optimized-progress-report+xml";
	case Applicationvndomapush = "application/vnd.oma.push";
	case Applicationvndomascidmmessagesxml = "application/vnd.oma.scidm.messages+xml";
	case Applicationvndomaxcapdirectoryxml = "application/vnd.oma.xcap-directory+xml";
	case Applicationvndomadsemailxml = "application/vnd.omads-email+xml";
	case Applicationvndomadsfilexml = "application/vnd.omads-file+xml";
	case Applicationvndomadsfolderxml = "application/vnd.omads-folder+xml";
	case Applicationvndomalocsuplinit = "application/vnd.omaloc-supl-init";
	case Applicationvndomascwsconfig = "application/vnd.oma-scws-config";
	case Applicationvndomascwshttprequest = "application/vnd.oma-scws-http-request";
	case Applicationvndomascwshttpresponse = "application/vnd.oma-scws-http-response";
	case Applicationvndonepager = "application/vnd.onepager";
	case Applicationvndonepagertamp = "application/vnd.onepagertamp";
	case Applicationvndonepagertamx = "application/vnd.onepagertamx";
	case Applicationvndonepagertat = "application/vnd.onepagertat";
	case Applicationvndonepagertatp = "application/vnd.onepagertatp";
	case Applicationvndonepagertatx = "application/vnd.onepagertatx";
	case Applicationvndopenbloxgamebinary = "application/vnd.openblox.game-binary";
	case Applicationvndopenbloxgamexml = "application/vnd.openblox.game+xml";
	case Applicationvndopeneyeoeb = "application/vnd.openeye.oeb";
	case Applicationvndopenstreetmapdataxml = "application/vnd.openstreetmap.data+xml";
	case Applicationvndopentimestampsots = "application/vnd.opentimestamps.ots";
	case Applicationvndopenxmlformatsofficedocumentcustompropertiesxml = "application/vnd.openxmlformats-officedocument.custom-properties+xml";
	case ApplicationvndopenxmlformatsofficedocumentcustomXmlPropertiesxml = "application/vnd.openxmlformats-officedocument.customXmlProperties+xml";
	case Applicationvndopenxmlformatsofficedocumentdrawingxml = "application/vnd.openxmlformats-officedocument.drawing+xml";
	case Applicationvndopenxmlformatsofficedocumentdrawingmlchartxml = "application/vnd.openxmlformats-officedocument.drawingml.chart+xml";
	case Applicationvndopenxmlformatsofficedocumentdrawingmlchartshapesxml = "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml";
	case ApplicationvndopenxmlformatsofficedocumentdrawingmldiagramColorsxml = "application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml";
	case ApplicationvndopenxmlformatsofficedocumentdrawingmldiagramDataxml = "application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml";
	case ApplicationvndopenxmlformatsofficedocumentdrawingmldiagramLayoutxml = "application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml";
	case ApplicationvndopenxmlformatsofficedocumentdrawingmldiagramStylexml = "application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml";
	case Applicationvndopenxmlformatsofficedocumentextendedpropertiesxml = "application/vnd.openxmlformats-officedocument.extended-properties+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlcommentAuthorsxml = "application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml";
	case Applicationvndopenxmlformatsofficedocumentpresentationmlcommentsxml = "application/vnd.openxmlformats-officedocument.presentationml.comments+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlhandoutMasterxml = "application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlnotesMasterxml = "application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlnotesSlidexml = "application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml";
	case Applicationvndopenxmlformatsofficedocumentpresentationmlpresentation = "application/vnd.openxmlformats-officedocument.presentationml.presentation";
	case Applicationvndopenxmlformatsofficedocumentpresentationmlpresentationmainxml = "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlpresPropsxml = "application/vnd.openxmlformats-officedocument.presentationml.presProps+xml";
	case Applicationvndopenxmlformatsofficedocumentpresentationmlslide = "application/vnd.openxmlformats-officedocument.presentationml.slide";
	case Applicationvndopenxmlformatsofficedocumentpresentationmlslidexml = "application/vnd.openxmlformats-officedocument.presentationml.slide+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlslideLayoutxml = "application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlslideMasterxml = "application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml";
	case Applicationvndopenxmlformatsofficedocumentpresentationmlslideshow = "application/vnd.openxmlformats-officedocument.presentationml.slideshow";
	case Applicationvndopenxmlformatsofficedocumentpresentationmlslideshowmainxml = "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlslideUpdateInfoxml = "application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmltableStylesxml = "application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml";
	case Applicationvndopenxmlformatsofficedocumentpresentationmltagsxml = "application/vnd.openxmlformats-officedocument.presentationml.tags+xml";
	case Applicationvndopenxmlformatsofficedocumentpresentationmltemplate = "application/vnd.openxmlformats-officedocument.presentationml.template";
	case Applicationvndopenxmlformatsofficedocumentpresentationmltemplatemainxml = "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml";
	case ApplicationvndopenxmlformatsofficedocumentpresentationmlviewPropsxml = "application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlcalcChainxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmlchartsheetxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmlcommentsxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmlconnectionsxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmldialogsheetxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlexternalLinkxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlpivotCacheDefinitionxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlpivotCacheRecordsxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlpivotTablexml = "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlqueryTablexml = "application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlrevisionHeadersxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlrevisionLogxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlsharedStringsxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmlsheet = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmlsheetmainxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlsheetMetadataxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmlstylesxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmltablexml = "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmltableSingleCellsxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmltemplate = "application/vnd.openxmlformats-officedocument.spreadsheetml.template";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmltemplatemainxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmluserNamesxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml";
	case ApplicationvndopenxmlformatsofficedocumentspreadsheetmlvolatileDependenciesxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml";
	case Applicationvndopenxmlformatsofficedocumentspreadsheetmlworksheetxml = "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml";
	case Applicationvndopenxmlformatsofficedocumentthemexml = "application/vnd.openxmlformats-officedocument.theme+xml";
	case ApplicationvndopenxmlformatsofficedocumentthemeOverridexml = "application/vnd.openxmlformats-officedocument.themeOverride+xml";
	case ApplicationvndopenxmlformatsofficedocumentvmlDrawing = "application/vnd.openxmlformats-officedocument.vmlDrawing";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmlcommentsxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmldocument = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmldocumentglossaryxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmldocumentmainxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmlendnotesxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml";
	case ApplicationvndopenxmlformatsofficedocumentwordprocessingmlfontTablexml = "application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmlfooterxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmlfootnotesxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmlnumberingxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmlsettingsxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmlstylesxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmltemplate = "application/vnd.openxmlformats-officedocument.wordprocessingml.template";
	case Applicationvndopenxmlformatsofficedocumentwordprocessingmltemplatemainxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml";
	case ApplicationvndopenxmlformatsofficedocumentwordprocessingmlwebSettingsxml = "application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml";
	case Applicationvndopenxmlformatspackagecorepropertiesxml = "application/vnd.openxmlformats-package.core-properties+xml";
	case Applicationvndopenxmlformatspackagedigitalsignaturexmlsignaturexml = "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml";
	case Applicationvndopenxmlformatspackagerelationshipsxml = "application/vnd.openxmlformats-package.relationships+xml";
	case Applicationvndoracleresourcejson = "application/vnd.oracle.resource+json";
	case Applicationvndorangeindata = "application/vnd.orange.indata";
	case Applicationvndosanetdeploy = "application/vnd.osa.netdeploy";
	case Applicationvndosgeomapguidepackage = "application/vnd.osgeo.mapguide.package";
	case Applicationvndosgibundle = "application/vnd.osgi.bundle";
	case Applicationvndosgidp = "application/vnd.osgi.dp";
	case Applicationvndosgisubsystem = "application/vnd.osgi.subsystem";
	case Applicationvndotpsctkipxml = "application/vnd.otps.ct-kip+xml";
	case Applicationvndoxlicountgraph = "application/vnd.oxli.countgraph";
	case Applicationvndpagerdutyjson = "application/vnd.pagerduty+json";
	case Applicationvndpalm = "application/vnd.palm";
	case Applicationvndpanoply = "application/vnd.panoply";
	case Applicationvndpaosxml = "application/vnd.paos.xml";
	case Applicationvndpatentdive = "application/vnd.patentdive";
	case Applicationvndpatientecommsdoc = "application/vnd.patientecommsdoc";
	case Applicationvndpawaafile = "application/vnd.pawaafile";
	case Applicationvndpcos = "application/vnd.pcos";
	case Applicationvndpgformat = "application/vnd.pg.format";
	case Applicationvndpgosasli = "application/vnd.pg.osasli";
	case Applicationvndpiaccessapplicationlicence = "application/vnd.piaccess.application-licence";
	case Applicationvndpicsel = "application/vnd.picsel";
	case Applicationvndpmiwidget = "application/vnd.pmi.widget";
	case Applicationvndpocgroupadvertisementxml = "application/vnd.poc.group-advertisement+xml";
	case Applicationvndpocketlearn = "application/vnd.pocketlearn";
	case Applicationvndpowerbuilder6 = "application/vnd.powerbuilder6";
	case Applicationvndpowerbuilder6s = "application/vnd.powerbuilder6-s";
	case Applicationvndpowerbuilder7 = "application/vnd.powerbuilder7";
	case Applicationvndpowerbuilder75 = "application/vnd.powerbuilder75";
	case Applicationvndpowerbuilder75s = "application/vnd.powerbuilder75-s";
	case Applicationvndpowerbuilder7s = "application/vnd.powerbuilder7-s";
	case Applicationvndpreminet = "application/vnd.preminet";
	case Applicationvndpreviewsystemsbox = "application/vnd.previewsystems.box";
	case Applicationvndproteusmagazine = "application/vnd.proteus.magazine";
	case Applicationvndpsfs = "application/vnd.psfs";
	case Applicationvndpublisharedeltatree = "application/vnd.publishare-delta-tree";
	case Applicationvndpviptid1 = "application/vnd.pvi.ptid1";
	case Applicationvndpwgmultiplexed = "application/vnd.pwg-multiplexed";
	case Applicationvndpwgxhtmlprintxml = "application/vnd.pwg-xhtml-print+xml";
	case Applicationvndqualcommbrewappres = "application/vnd.qualcomm.brew-app-res";
	case Applicationvndquarantainenet = "application/vnd.quarantainenet";
	case ApplicationvndQuarkQuarkXPress = "application/vnd.Quark.QuarkXPress";
	case Applicationvndquobjectquoxdocument = "application/vnd.quobject-quoxdocument";
	case Applicationvndradisysmomlxml = "application/vnd.radisys.moml+xml";
	case Applicationvndradisysmsmlauditconfxml = "application/vnd.radisys.msml-audit-conf+xml";
	case Applicationvndradisysmsmlauditconnxml = "application/vnd.radisys.msml-audit-conn+xml";
	case Applicationvndradisysmsmlauditdialogxml = "application/vnd.radisys.msml-audit-dialog+xml";
	case Applicationvndradisysmsmlauditstreamxml = "application/vnd.radisys.msml-audit-stream+xml";
	case Applicationvndradisysmsmlauditxml = "application/vnd.radisys.msml-audit+xml";
	case Applicationvndradisysmsmlconfxml = "application/vnd.radisys.msml-conf+xml";
	case Applicationvndradisysmsmldialogbasexml = "application/vnd.radisys.msml-dialog-base+xml";
	case Applicationvndradisysmsmldialogfaxdetectxml = "application/vnd.radisys.msml-dialog-fax-detect+xml";
	case Applicationvndradisysmsmldialogfaxsendrecvxml = "application/vnd.radisys.msml-dialog-fax-sendrecv+xml";
	case Applicationvndradisysmsmldialoggroupxml = "application/vnd.radisys.msml-dialog-group+xml";
	case Applicationvndradisysmsmldialogspeechxml = "application/vnd.radisys.msml-dialog-speech+xml";
	case Applicationvndradisysmsmldialogtransformxml = "application/vnd.radisys.msml-dialog-transform+xml";
	case Applicationvndradisysmsmldialogxml = "application/vnd.radisys.msml-dialog+xml";
	case Applicationvndradisysmsmlxml = "application/vnd.radisys.msml+xml";
	case Applicationvndrainstordata = "application/vnd.rainstor.data";
	case Applicationvndrapid = "application/vnd.rapid";
	case Applicationvndrar = "application/vnd.rar";
	case Applicationvndrealvncbed = "application/vnd.realvnc.bed";
	case Applicationvndrecordaremusicxml = "application/vnd.recordare.musicxml";
	case Applicationvndrecordaremusicxmlxml = "application/vnd.recordare.musicxml+xml";
	case ApplicationvndRenLearnrlprint = "application/vnd.RenLearn.rlprint";
	case Applicationvndresilientlogic = "application/vnd.resilient.logic";
	case Applicationvndrestfuljson = "application/vnd.restful+json";
	case Applicationvndrigcryptonote = "application/vnd.rig.cryptonote";
	case Applicationvndroute66link66xml = "application/vnd.route66.link66+xml";
	case Applicationvndrs274x = "application/vnd.rs-274x";
	case Applicationvndruckusdownload = "application/vnd.ruckus.download";
	case Applicationvnds3sms = "application/vnd.s3sms";
	case Applicationvndsailingtrackertrack = "application/vnd.sailingtracker.track";
	case Applicationvndsar = "application/vnd.sar";
	case Applicationvndsbmcid = "application/vnd.sbm.cid";
	case Applicationvndsbmmid2 = "application/vnd.sbm.mid2";
	case Applicationvndscribus = "application/vnd.scribus";
	case Applicationvndsealed3df = "application/vnd.sealed.3df";
	case Applicationvndsealedcsf = "application/vnd.sealed.csf";
	case Applicationvndsealeddoc = "application/vnd.sealed.doc";
	case Applicationvndsealedeml = "application/vnd.sealed.eml";
	case Applicationvndsealedmht = "application/vnd.sealed.mht";
	case Applicationvndsealednet = "application/vnd.sealed.net";
	case Applicationvndsealedppt = "application/vnd.sealed.ppt";
	case Applicationvndsealedtiff = "application/vnd.sealed.tiff";
	case Applicationvndsealedxls = "application/vnd.sealed.xls";
	case Applicationvndsealedmediasoftsealhtml = "application/vnd.sealedmedia.softseal.html";
	case Applicationvndsealedmediasoftsealpdf = "application/vnd.sealedmedia.softseal.pdf";
	case Applicationvndseemail = "application/vnd.seemail";
	case Applicationvndseisjson = "application/vnd.seis+json";
	case Applicationvndsema = "application/vnd.sema";
	case Applicationvndsemd = "application/vnd.semd";
	case Applicationvndsemf = "application/vnd.semf";
	case Applicationvndshadesavefile = "application/vnd.shade-save-file";
	case Applicationvndshanainformedformdata = "application/vnd.shana.informed.formdata";
	case Applicationvndshanainformedformtemplate = "application/vnd.shana.informed.formtemplate";
	case Applicationvndshanainformedinterchange = "application/vnd.shana.informed.interchange";
	case Applicationvndshanainformedpackage = "application/vnd.shana.informed.package";
	case Applicationvndshootproofjson = "application/vnd.shootproof+json";
	case Applicationvndshopkickjson = "application/vnd.shopkick+json";
	case Applicationvndshp = "application/vnd.shp";
	case Applicationvndshx = "application/vnd.shx";
	case Applicationvndsigroksession = "application/vnd.sigrok.session";
	case ApplicationvndSimTechMindMapper = "application/vnd.SimTech-MindMapper";
	case Applicationvndsirenjson = "application/vnd.siren+json";
	case Applicationvndsmaf = "application/vnd.smaf";
	case Applicationvndsmartnotebook = "application/vnd.smart.notebook";
	case Applicationvndsmartteacher = "application/vnd.smart.teacher";
	case Applicationvndsnesdevpagetable = "application/vnd.snesdev-page-table";
	case Applicationvndsoftware602fillerformxml = "application/vnd.software602.filler.form+xml";
	case Applicationvndsoftware602fillerformxmlzip = "application/vnd.software602.filler.form-xml-zip";
	case Applicationvndsolentsdkmxml = "application/vnd.solent.sdkm+xml";
	case Applicationvndspotfiredxp = "application/vnd.spotfire.dxp";
	case Applicationvndspotfiresfs = "application/vnd.spotfire.sfs";
	case Applicationvndsqlite3 = "application/vnd.sqlite3";
	case Applicationvndssscod = "application/vnd.sss-cod";
	case Applicationvndsssdtf = "application/vnd.sss-dtf";
	case Applicationvndsssntf = "application/vnd.sss-ntf";
	case Applicationvndstepmaniapackage = "application/vnd.stepmania.package";
	case Applicationvndstepmaniastepchart = "application/vnd.stepmania.stepchart";
	case Applicationvndstreetstream = "application/vnd.street-stream";
	case Applicationvndsunwadlxml = "application/vnd.sun.wadl+xml";
	case Applicationvndsuscalendar = "application/vnd.sus-calendar";
	case Applicationvndsvd = "application/vnd.svd";
	case Applicationvndswiftviewics = "application/vnd.swiftview-ics";
	case Applicationvndsyclexml = "application/vnd.sycle+xml";
	case Applicationvndsyncmldmnotification = "application/vnd.syncml.dm.notification";
	case Applicationvndsyncmldmddfxml = "application/vnd.syncml.dmddf+xml";
	case Applicationvndsyncmldmtndswbxml = "application/vnd.syncml.dmtnds+wbxml";
	case Applicationvndsyncmldmtndsxml = "application/vnd.syncml.dmtnds+xml";
	case Applicationvndsyncmldmddfwbxml = "application/vnd.syncml.dmddf+wbxml";
	case Applicationvndsyncmldmwbxml = "application/vnd.syncml.dm+wbxml";
	case Applicationvndsyncmldmxml = "application/vnd.syncml.dm+xml";
	case Applicationvndsyncmldsnotification = "application/vnd.syncml.ds.notification";
	case Applicationvndsyncmlxml = "application/vnd.syncml+xml";
	case Applicationvndtableschemajson = "application/vnd.tableschema+json";
	case Applicationvndtaointentmodulearchive = "application/vnd.tao.intent-module-archive";
	case Applicationvndtcpdumppcap = "application/vnd.tcpdump.pcap";
	case Applicationvndthinkcellppttcjson = "application/vnd.think-cell.ppttc+json";
	case Applicationvndtml = "application/vnd.tml";
	case Applicationvndtmdmediaflexapixml = "application/vnd.tmd.mediaflex.api+xml";
	case Applicationvndtmobilelivetv = "application/vnd.tmobile-livetv";
	case Applicationvndtrionesource = "application/vnd.tri.onesource";
	case Applicationvndtridtpt = "application/vnd.trid.tpt";
	case Applicationvndtriscapemxs = "application/vnd.triscape.mxs";
	case Applicationvndtrueapp = "application/vnd.trueapp";
	case Applicationvndtruedoc = "application/vnd.truedoc";
	case Applicationvndubisoftwebplayer = "application/vnd.ubisoft.webplayer";
	case Applicationvndufdl = "application/vnd.ufdl";
	case Applicationvnduiqtheme = "application/vnd.uiq.theme";
	case Applicationvndumajin = "application/vnd.umajin";
	case Applicationvndunity = "application/vnd.unity";
	case Applicationvnduomlxml = "application/vnd.uoml+xml";
	case Applicationvnduplanetalert = "application/vnd.uplanet.alert";
	case Applicationvnduplanetalertwbxml = "application/vnd.uplanet.alert-wbxml";
	case Applicationvnduplanetbearerchoice = "application/vnd.uplanet.bearer-choice";
	case Applicationvnduplanetbearerchoicewbxml = "application/vnd.uplanet.bearer-choice-wbxml";
	case Applicationvnduplanetcacheop = "application/vnd.uplanet.cacheop";
	case Applicationvnduplanetcacheopwbxml = "application/vnd.uplanet.cacheop-wbxml";
	case Applicationvnduplanetchannel = "application/vnd.uplanet.channel";
	case Applicationvnduplanetchannelwbxml = "application/vnd.uplanet.channel-wbxml";
	case Applicationvnduplanetlist = "application/vnd.uplanet.list";
	case Applicationvnduplanetlistcmd = "application/vnd.uplanet.listcmd";
	case Applicationvnduplanetlistcmdwbxml = "application/vnd.uplanet.listcmd-wbxml";
	case Applicationvnduplanetlistwbxml = "application/vnd.uplanet.list-wbxml";
	case Applicationvndurimap = "application/vnd.uri-map";
	case Applicationvnduplanetsignal = "application/vnd.uplanet.signal";
	case Applicationvndvalvesourcematerial = "application/vnd.valve.source.material";
	case Applicationvndvcx = "application/vnd.vcx";
	case Applicationvndvdstudy = "application/vnd.vd-study";
	case Applicationvndvectorworks = "application/vnd.vectorworks";
	case Applicationvndveljson = "application/vnd.vel+json";
	case Applicationvndverimatrixvcas = "application/vnd.verimatrix.vcas";
	case Applicationvndveritoneaionjson = "application/vnd.veritone.aion+json";
	case Applicationvndveryantthin = "application/vnd.veryant.thin";
	case Applicationvndvesencrypted = "application/vnd.ves.encrypted";
	case Applicationvndvidsoftvidconference = "application/vnd.vidsoft.vidconference";
	case Applicationvndvisio = "application/vnd.visio";
	case Applicationvndvisionary = "application/vnd.visionary";
	case Applicationvndvividencescriptfile = "application/vnd.vividence.scriptfile";
	case Applicationvndvsf = "application/vnd.vsf";
	case Applicationvndwapsic = "application/vnd.wap.sic";
	case Applicationvndwapslc = "application/vnd.wap.slc";
	case Applicationvndwapwbxml = "application/vnd.wap.wbxml";
	case Applicationvndwapwmlc = "application/vnd.wap.wmlc";
	case Applicationvndwapwmlscriptc = "application/vnd.wap.wmlscriptc";
	case Applicationvndwebturbo = "application/vnd.webturbo";
	case Applicationvndwfadpp = "application/vnd.wfa.dpp";
	case Applicationvndwfap2p = "application/vnd.wfa.p2p";
	case Applicationvndwfawsc = "application/vnd.wfa.wsc";
	case Applicationvndwindowsdevicepairing = "application/vnd.windows.devicepairing";
	case Applicationvndwmc = "application/vnd.wmc";
	case Applicationvndwmfbootstrap = "application/vnd.wmf.bootstrap";
	case Applicationvndwolframmathematica = "application/vnd.wolfram.mathematica";
	case Applicationvndwolframmathematicapackage = "application/vnd.wolfram.mathematica.package";
	case Applicationvndwolframplayer = "application/vnd.wolfram.player";
	case Applicationvndwordperfect = "application/vnd.wordperfect";
	case Applicationvndwqd = "application/vnd.wqd";
	case Applicationvndwrqhp3000labelled = "application/vnd.wrq-hp3000-labelled";
	case Applicationvndwtstf = "application/vnd.wt.stf";
	case Applicationvndwvcspxml = "application/vnd.wv.csp+xml";
	case Applicationvndwvcspwbxml = "application/vnd.wv.csp+wbxml";
	case Applicationvndwvsspxml = "application/vnd.wv.ssp+xml";
	case Applicationvndxacmljson = "application/vnd.xacml+json";
	case Applicationvndxara = "application/vnd.xara";
	case Applicationvndxfdl = "application/vnd.xfdl";
	case Applicationvndxfdlwebform = "application/vnd.xfdl.webform";
	case Applicationvndxmixml = "application/vnd.xmi+xml";
	case Applicationvndxmpiecpkg = "application/vnd.xmpie.cpkg";
	case Applicationvndxmpiedpkg = "application/vnd.xmpie.dpkg";
	case Applicationvndxmpieplan = "application/vnd.xmpie.plan";
	case Applicationvndxmpieppkg = "application/vnd.xmpie.ppkg";
	case Applicationvndxmpiexlim = "application/vnd.xmpie.xlim";
	case Applicationvndyamahahvdic = "application/vnd.yamaha.hv-dic";
	case Applicationvndyamahahvscript = "application/vnd.yamaha.hv-script";
	case Applicationvndyamahahvvoice = "application/vnd.yamaha.hv-voice";
	case Applicationvndyamahaopenscoreformatosfpvgxml = "application/vnd.yamaha.openscoreformat.osfpvg+xml";
	case Applicationvndyamahaopenscoreformat = "application/vnd.yamaha.openscoreformat";
	case Applicationvndyamaharemotesetup = "application/vnd.yamaha.remote-setup";
	case Applicationvndyamahasmafaudio = "application/vnd.yamaha.smaf-audio";
	case Applicationvndyamahasmafphrase = "application/vnd.yamaha.smaf-phrase";
	case Applicationvndyamahathroughngn = "application/vnd.yamaha.through-ngn";
	case Applicationvndyamahatunneludpencap = "application/vnd.yamaha.tunnel-udpencap";
	case Applicationvndyaoweme = "application/vnd.yaoweme";
	case Applicationvndyellowrivercustommenu = "application/vnd.yellowriver-custom-menu";
	case Applicationvndzul = "application/vnd.zul";
	case Applicationvndzzazzdeckxml = "application/vnd.zzazz.deck+xml";
	case Applicationvoicexmlxml = "application/voicexml+xml";
	case Applicationvouchercmsjson = "application/voucher-cms+json";
	case Applicationvqrtcpxr = "application/vq-rtcpxr";
	case Applicationwasm = "application/wasm";
	case Applicationwatcherinfoxml = "application/watcherinfo+xml";
	case Applicationwebpushoptionsjson = "application/webpush-options+json";
	case Applicationwhoisppquery = "application/whoispp-query";
	case Applicationwhoisppresponse = "application/whoispp-response";
	case Applicationwidget = "application/widget";
	case Applicationwita = "application/wita";
	case Applicationwordperfect51 = "application/wordperfect5.1";
	case Applicationwsdlxml = "application/wsdl+xml";
	case Applicationwspolicyxml = "application/wspolicy+xml";
	case Applicationxpkimessage = "application/x-pki-message";
	case Applicationxwwwformurlencoded = "application/x-www-form-urlencoded";
	case Applicationxx509cacert = "application/x-x509-ca-cert";
	case Applicationxx509caracert = "application/x-x509-ca-ra-cert";
	case Applicationxx509nextcacert = "application/x-x509-next-ca-cert";
	case Applicationx400bp = "application/x400-bp";
	case Applicationxacmlxml = "application/xacml+xml";
	case Applicationxcapattxml = "application/xcap-att+xml";
	case Applicationxcapcapsxml = "application/xcap-caps+xml";
	case Applicationxcapdiffxml = "application/xcap-diff+xml";
	case Applicationxcapelxml = "application/xcap-el+xml";
	case Applicationxcaperrorxml = "application/xcap-error+xml";
	case Applicationxcapnsxml = "application/xcap-ns+xml";
	case Applicationxconconferenceinfodiffxml = "application/xcon-conference-info-diff+xml";
	case Applicationxconconferenceinfoxml = "application/xcon-conference-info+xml";
	case Applicationxencxml = "application/xenc+xml";
	case Applicationxhtmlxml = "application/xhtml+xml";
	case Applicationxliffxml = "application/xliff+xml";
	case Applicationxml = "application/xml";
	case Applicationxmldtd = "application/xml-dtd";
	case Applicationxmlexternalparsedentity = "application/xml-external-parsed-entity";
	case Applicationxmlpatchxml = "application/xml-patch+xml";
	case Applicationxmppxml = "application/xmpp+xml";
	case Applicationxopxml = "application/xop+xml";
	case Applicationxsltxml = "application/xslt+xml";
	case Applicationxvxml = "application/xv+xml";
	case Applicationyang = "application/yang";
	case Applicationyangdatajson = "application/yang-data+json";
	case Applicationyangdataxml = "application/yang-data+xml";
	case Applicationyangpatchjson = "application/yang-patch+json";
	case Applicationyangpatchxml = "application/yang-patch+xml";
	case Applicationyinxml = "application/yin+xml";
	case Applicationzip = "application/zip";
	case Applicationzlib = "application/zlib";
	case Applicationzstd = "application/zstd";
	case Audio1dinterleavedparityfec = "audio/1d-interleaved-parityfec";
	case Audio32kadpcm = "audio/32kadpcm";
	case Audio3gpp = "audio/3gpp";
	case Audio3gpp2 = "audio/3gpp2";
	case Audioaac = "audio/aac";
	case Audioac3 = "audio/ac3";
	case AudioAMR = "audio/AMR";
	case AudioAMRWB = "audio/AMR-WB";
	case Audioamrwb = "audio/amr-wb+";
	case Audioaptx = "audio/aptx";
	case Audioasc = "audio/asc";
	case AudioATRACADVANCEDLOSSLESS = "audio/ATRAC-ADVANCED-LOSSLESS";
	case AudioATRACX = "audio/ATRAC-X";
	case AudioATRAC3 = "audio/ATRAC3";
	case Audiobasic = "audio/basic";
	case AudioBV16 = "audio/BV16";
	case AudioBV32 = "audio/BV32";
	case Audioclearmode = "audio/clearmode";
	case AudioCN = "audio/CN";
	case AudioDAT12 = "audio/DAT12";
	case Audiodls = "audio/dls";
	case Audiodsres201108 = "audio/dsr-es201108";
	case Audiodsres202050 = "audio/dsr-es202050";
	case Audiodsres202211 = "audio/dsr-es202211";
	case Audiodsres202212 = "audio/dsr-es202212";
	case AudioDV = "audio/DV";
	case AudioDVI4 = "audio/DVI4";
	case Audioeac3 = "audio/eac3";
	case Audioencaprtp = "audio/encaprtp";
	case AudioEVRC = "audio/EVRC";
	case AudioEVRCQCP = "audio/EVRC-QCP";
	case AudioEVRC0 = "audio/EVRC0";
	case AudioEVRC1 = "audio/EVRC1";
	case AudioEVRCB = "audio/EVRCB";
	case AudioEVRCB0 = "audio/EVRCB0";
	case AudioEVRCB1 = "audio/EVRCB1";
	case AudioEVRCNW = "audio/EVRCNW";
	case AudioEVRCNW0 = "audio/EVRCNW0";
	case AudioEVRCNW1 = "audio/EVRCNW1";
	case AudioEVRCWB = "audio/EVRCWB";
	case AudioEVRCWB0 = "audio/EVRCWB0";
	case AudioEVRCWB1 = "audio/EVRCWB1";
	case AudioEVS = "audio/EVS";
	case Audioexample = "audio/example";
	case Audioflexfec = "audio/flexfec";
	case Audiofwdred = "audio/fwdred";
	case AudioG7110 = "audio/G711-0";
	case AudioG719 = "audio/G719";
	case AudioG7221 = "audio/G7221";
	case AudioG722 = "audio/G722";
	case AudioG723 = "audio/G723";
	case AudioG72616 = "audio/G726-16";
	case AudioG72624 = "audio/G726-24";
	case AudioG72632 = "audio/G726-32";
	case AudioG72640 = "audio/G726-40";
	case AudioG728 = "audio/G728";
	case AudioG729 = "audio/G729";
	case AudioG7291 = "audio/G7291";
	case AudioG729D = "audio/G729D";
	case AudioG729E = "audio/G729E";
	case AudioGSM = "audio/GSM";
	case AudioGSMEFR = "audio/GSM-EFR";
	case AudioGSMHR08 = "audio/GSM-HR-08";
	case AudioiLBC = "audio/iLBC";
	case Audioipmr_v25 = "audio/ip-mr_v2.5";
	case AudioL8 = "audio/L8";
	case AudioL16 = "audio/L16";
	case AudioL20 = "audio/L20";
	case AudioL24 = "audio/L24";
	case AudioLPC = "audio/LPC";
	case AudioMELP = "audio/MELP";
	case AudioMELP600 = "audio/MELP600";
	case AudioMELP1200 = "audio/MELP1200";
	case AudioMELP2400 = "audio/MELP2400";
	case Audiomhas = "audio/mhas";
	case Audiomobilexmf = "audio/mobile-xmf";
	case AudioMPA = "audio/MPA";
	case Audiomp4 = "audio/mp4";
	case AudioMP4ALATM = "audio/MP4A-LATM";
	case Audiomparobust = "audio/mpa-robust";
	case Audiompeg = "audio/mpeg";
	case Audiompeg4generic = "audio/mpeg4-generic";
	case Audioogg = "audio/ogg";
	case Audioopus = "audio/opus";
	case Audioparityfec = "audio/parityfec";
	case AudioPCMA = "audio/PCMA";
	case AudioPCMAWB = "audio/PCMA-WB";
	case AudioPCMU = "audio/PCMU";
	case AudioPCMUWB = "audio/PCMU-WB";
	case Audioprssid = "audio/prs.sid";
	case AudioQCELP = "audio/QCELP";
	case Audioraptorfec = "audio/raptorfec";
	case AudioRED = "audio/RED";
	case Audiortpencaescm128 = "audio/rtp-enc-aescm128";
	case Audiortploopback = "audio/rtploopback";
	case Audiortpmidi = "audio/rtp-midi";
	case Audiortx = "audio/rtx";
	case Audioscip = "audio/scip";
	case AudioSMV = "audio/SMV";
	case AudioSMV0 = "audio/SMV0";
	case AudioSMVQCP = "audio/SMV-QCP";
	case Audiosofa = "audio/sofa";
	case Audiospmidi = "audio/sp-midi";
	case Audiospeex = "audio/speex";
	case Audiot140c = "audio/t140c";
	case Audiot38 = "audio/t38";
	case Audiotelephoneevent = "audio/telephone-event";
	case AudioTETRA_ACELP = "audio/TETRA_ACELP";
	case AudioTETRA_ACELP_BB = "audio/TETRA_ACELP_BB";
	case Audiotone = "audio/tone";
	case AudioTSVCIS = "audio/TSVCIS";
	case AudioUEMCLIP = "audio/UEMCLIP";
	case Audioulpfec = "audio/ulpfec";
	case Audiousac = "audio/usac";
	case AudioVDVI = "audio/VDVI";
	case AudioVMRWB = "audio/VMR-WB";
	case Audiovnd3gppiufp = "audio/vnd.3gpp.iufp";
	case Audiovnd4SB = "audio/vnd.4SB";
	case Audiovndaudiokoz = "audio/vnd.audiokoz";
	case AudiovndCELP = "audio/vnd.CELP";
	case Audiovndcisconse = "audio/vnd.cisco.nse";
	case Audiovndcmlesradioevents = "audio/vnd.cmles.radio-events";
	case Audiovndcnsanp1 = "audio/vnd.cns.anp1";
	case Audiovndcnsinf1 = "audio/vnd.cns.inf1";
	case Audiovnddeceaudio = "audio/vnd.dece.audio";
	case Audiovnddigitalwinds = "audio/vnd.digital-winds";
	case Audiovnddlnaadts = "audio/vnd.dlna.adts";
	case Audiovnddolbyheaac1 = "audio/vnd.dolby.heaac.1";
	case Audiovnddolbyheaac2 = "audio/vnd.dolby.heaac.2";
	case Audiovnddolbymlp = "audio/vnd.dolby.mlp";
	case Audiovnddolbymps = "audio/vnd.dolby.mps";
	case Audiovnddolbypl2 = "audio/vnd.dolby.pl2";
	case Audiovnddolbypl2x = "audio/vnd.dolby.pl2x";
	case Audiovnddolbypl2z = "audio/vnd.dolby.pl2z";
	case Audiovnddolbypulse1 = "audio/vnd.dolby.pulse.1";
	case Audiovnddra = "audio/vnd.dra";
	case Audiovnddts = "audio/vnd.dts";
	case Audiovnddtshd = "audio/vnd.dts.hd";
	case Audiovnddtsuhd = "audio/vnd.dts.uhd";
	case Audiovnddvbfile = "audio/vnd.dvb.file";
	case Audiovndeveradplj = "audio/vnd.everad.plj";
	case Audiovndhnsaudio = "audio/vnd.hns.audio";
	case Audiovndlucentvoice = "audio/vnd.lucent.voice";
	case Audiovndmsplayreadymediapya = "audio/vnd.ms-playready.media.pya";
	case Audiovndnokiamobilexmf = "audio/vnd.nokia.mobile-xmf";
	case Audiovndnortelvbk = "audio/vnd.nortel.vbk";
	case Audiovndnueraecelp4800 = "audio/vnd.nuera.ecelp4800";
	case Audiovndnueraecelp7470 = "audio/vnd.nuera.ecelp7470";
	case Audiovndnueraecelp9600 = "audio/vnd.nuera.ecelp9600";
	case Audiovndoctelsbc = "audio/vnd.octel.sbc";
	case Audiovndpresonusmultitrack = "audio/vnd.presonus.multitrack";
	case Audiovndrhetorex32kadpcm = "audio/vnd.rhetorex.32kadpcm";
	case Audiovndrip = "audio/vnd.rip";
	case Audiovndsealedmediasoftsealmpeg = "audio/vnd.sealedmedia.softseal.mpeg";
	case Audiovndvmxcvsd = "audio/vnd.vmx.cvsd";
	case Audiovorbis = "audio/vorbis";
	case Audiovorbisconfig = "audio/vorbis-config";
	case Fontcollection = "font/collection";
	case Fontotf = "font/otf";
	case Fontsfnt = "font/sfnt";
	case Fontttf = "font/ttf";
	case Fontwoff = "font/woff";
	case Fontwoff2 = "font/woff2";
	case Imageaces = "image/aces";
	case Imageavci = "image/avci";
	case Imageavcs = "image/avcs";
	case Imageavif = "image/avif";
	case Imagebmp = "image/bmp";
	case Imagecgm = "image/cgm";
	case Imagedicomrle = "image/dicom-rle";
	case Imageemf = "image/emf";
	case Imageexample = "image/example";
	case Imagefits = "image/fits";
	case Imageg3fax = "image/g3fax";
	case Imageheic = "image/heic";
	case Imageheicsequence = "image/heic-sequence";
	case Imageheif = "image/heif";
	case Imageheifsequence = "image/heif-sequence";
	case Imagehej2k = "image/hej2k";
	case Imagehsj2 = "image/hsj2";
	case Imagejls = "image/jls";
	case Imagejp2 = "image/jp2";
	case Imagejph = "image/jph";
	case Imagejphc = "image/jphc";
	case Imagejpm = "image/jpm";
	case Imagejpx = "image/jpx";
	case Imagejxr = "image/jxr";
	case ImagejxrA = "image/jxrA";
	case ImagejxrS = "image/jxrS";
	case Imagejxs = "image/jxs";
	case Imagejxsc = "image/jxsc";
	case Imagejxsi = "image/jxsi";
	case Imagejxss = "image/jxss";
	case Imagektx = "image/ktx";
	case Imagektx2 = "image/ktx2";
	case Imagenaplps = "image/naplps";
	case Imagepng = "image/png";
	case Imageprsbtif = "image/prs.btif";
	case Imageprspti = "image/prs.pti";
	case Imagepwgraster = "image/pwg-raster";
	case Imagesvgxml = "image/svg+xml";
	case Imaget38 = "image/t38";
	case Imagetiff = "image/tiff";
	case Imagetifffx = "image/tiff-fx";
	case Imagevndadobephotoshop = "image/vnd.adobe.photoshop";
	case Imagevndairzipacceleratorazv = "image/vnd.airzip.accelerator.azv";
	case Imagevndcnsinf2 = "image/vnd.cns.inf2";
	case Imagevnddecegraphic = "image/vnd.dece.graphic";
	case Imagevnddjvu = "image/vnd.djvu";
	case Imagevnddwg = "image/vnd.dwg";
	case Imagevnddxf = "image/vnd.dxf";
	case Imagevnddvbsubtitle = "image/vnd.dvb.subtitle";
	case Imagevndfastbidsheet = "image/vnd.fastbidsheet";
	case Imagevndfpx = "image/vnd.fpx";
	case Imagevndfst = "image/vnd.fst";
	case Imagevndfujixeroxedmicsmmr = "image/vnd.fujixerox.edmics-mmr";
	case Imagevndfujixeroxedmicsrlc = "image/vnd.fujixerox.edmics-rlc";
	case Imagevndglobalgraphicspgb = "image/vnd.globalgraphics.pgb";
	case Imagevndmicrosofticon = "image/vnd.microsoft.icon";
	case Imagevndmix = "image/vnd.mix";
	case Imagevndmsmodi = "image/vnd.ms-modi";
	case Imagevndmozillaapng = "image/vnd.mozilla.apng";
	case Imagevndnetfpx = "image/vnd.net-fpx";
	case Imagevndpcob16 = "image/vnd.pco.b16";
	case Imagevndradiance = "image/vnd.radiance";
	case Imagevndsealedpng = "image/vnd.sealed.png";
	case Imagevndsealedmediasoftsealgif = "image/vnd.sealedmedia.softseal.gif";
	case Imagevndsealedmediasoftsealjpg = "image/vnd.sealedmedia.softseal.jpg";
	case Imagevndsvf = "image/vnd.svf";
	case Imagevndtencenttap = "image/vnd.tencent.tap";
	case Imagevndvalvesourcetexture = "image/vnd.valve.source.texture";
	case Imagevndwapwbmp = "image/vnd.wap.wbmp";
	case Imagevndxiff = "image/vnd.xiff";
	case Imagevndzbrushpcx = "image/vnd.zbrush.pcx";
	case Imagewmf = "image/wmf";
	case MessageCPIM = "message/CPIM";
	case Messagedeliverystatus = "message/delivery-status";
	case Messagedispositionnotification = "message/disposition-notification";
	case Messageexample = "message/example";
	case Messagefeedbackreport = "message/feedback-report";
	case Messageglobal = "message/global";
	case Messageglobaldeliverystatus = "message/global-delivery-status";
	case Messageglobaldispositionnotification = "message/global-disposition-notification";
	case Messageglobalheaders = "message/global-headers";
	case Messagehttp = "message/http";
	case Messageimdnxml = "message/imdn+xml";
	case Messageshttp = "message/s-http";
	case Messagesip = "message/sip";
	case Messagesipfrag = "message/sipfrag";
	case Messagetrackingstatus = "message/tracking-status";
	case Messagevndwfawsc = "message/vnd.wfa.wsc";
	case Model3mf = "model/3mf";
	case Modele57 = "model/e57";
	case Modelexample = "model/example";
	case Modelgltfbinary = "model/gltf-binary";
	case Modelgltfjson = "model/gltf+json";
	case Modeliges = "model/iges";
	case Modelmtl = "model/mtl";
	case Modelobj = "model/obj";
	case Modelstep = "model/step";
	case Modelstepxml = "model/step+xml";
	case Modelstepzip = "model/step+zip";
	case Modelstepxmlzip = "model/step-xml+zip";
	case Modelstl = "model/stl";
	case Modelvndcolladaxml = "model/vnd.collada+xml";
	case Modelvnddwf = "model/vnd.dwf";
	case Modelvndflatland3dml = "model/vnd.flatland.3dml";
	case Modelvndgdl = "model/vnd.gdl";
	case Modelvndgsgdl = "model/vnd.gs-gdl";
	case Modelvndgtw = "model/vnd.gtw";
	case Modelvndmomlxml = "model/vnd.moml+xml";
	case Modelvndmts = "model/vnd.mts";
	case Modelvndopengex = "model/vnd.opengex";
	case Modelvndparasolidtransmitbinary = "model/vnd.parasolid.transmit.binary";
	case Modelvndparasolidtransmittext = "model/vnd.parasolid.transmit.text";
	case Modelvndpythapyox = "model/vnd.pytha.pyox";
	case Modelvndrosetteannotateddatamodel = "model/vnd.rosette.annotated-data-model";
	case Modelvndsapvds = "model/vnd.sap.vds";
	case Modelvndusdzzip = "model/vnd.usdz+zip";
	case Modelvndvalvesourcecompiledmap = "model/vnd.valve.source.compiled-map";
	case Modelvndvtu = "model/vnd.vtu";
	case Modelx3dvrml = "model/x3d-vrml";
	case Modelx3dfastinfoset = "model/x3d+fastinfoset";
	case Modelx3dxml = "model/x3d+xml";
	case Multipartappledouble = "multipart/appledouble";
	case Multipartbyteranges = "multipart/byteranges";
	case Multipartencrypted = "multipart/encrypted";
	case Multipartexample = "multipart/example";
	case Multipartformdata = "multipart/form-data";
	case Multipartheaderset = "multipart/header-set";
	case Multipartmultilingual = "multipart/multilingual";
	case Multipartrelated = "multipart/related";
	case Multipartreport = "multipart/report";
	case Multipartsigned = "multipart/signed";
	case Multipartvndbintmedplus = "multipart/vnd.bint.med-plus";
	case Multipartvoicemessage = "multipart/voice-message";
	case Multipartxmixedreplace = "multipart/x-mixed-replace";
	case Text1dinterleavedparityfec = "text/1d-interleaved-parityfec";
	case Textcachemanifest = "text/cache-manifest";
	case Textcalendar = "text/calendar";
	case Textcql = "text/cql";
	case Textcqlexpression = "text/cql-expression";
	case Textcqlidentifier = "text/cql-identifier";
	case Textcss = "text/css";
	case Textcsv = "text/csv";
	case Textcsvschema = "text/csv-schema";
	case Textdns = "text/dns";
	case Textencaprtp = "text/encaprtp";
	case Textexample = "text/example";
	case Textfhirpath = "text/fhirpath";
	case Textflexfec = "text/flexfec";
	case Textfwdred = "text/fwdred";
	case Textgff3 = "text/gff3";
	case Textgrammarreflist = "text/grammar-ref-list";
	case Texthtml = "text/html";
	case Textjcrcnd = "text/jcr-cnd";
	case Textmarkdown = "text/markdown";
	case Textmizar = "text/mizar";
	case Textn3 = "text/n3";
	case Textparameters = "text/parameters";
	case Textparityfec = "text/parityfec";
	case Textprovenancenotation = "text/provenance-notation";
	case Textprsfallensteinrst = "text/prs.fallenstein.rst";
	case Textprslinestag = "text/prs.lines.tag";
	case Textprsproplogic = "text/prs.prop.logic";
	case Textraptorfec = "text/raptorfec";
	case TextRED = "text/RED";
	case Textrfc822headers = "text/rfc822-headers";
	case Textrtf = "text/rtf";
	case Textrtpencaescm128 = "text/rtp-enc-aescm128";
	case Textrtploopback = "text/rtploopback";
	case Textrtx = "text/rtx";
	case TextSGML = "text/SGML";
	case Textshaclc = "text/shaclc";
	case Textshex = "text/shex";
	case Textspdx = "text/spdx";
	case Textstrings = "text/strings";
	case Textt140 = "text/t140";
	case Texttabseparatedvalues = "text/tab-separated-values";
	case Texttroff = "text/troff";
	case Textturtle = "text/turtle";
	case Textulpfec = "text/ulpfec";
	case Texturilist = "text/uri-list";
	case Textvcard = "text/vcard";
	case Textvnda = "text/vnd.a";
	case Textvndabc = "text/vnd.abc";
	case Textvndasciiart = "text/vnd.ascii-art";
	case Textvndcurl = "text/vnd.curl";
	case Textvnddebiancopyright = "text/vnd.debian.copyright";
	case TextvndDMClientScript = "text/vnd.DMClientScript";
	case Textvnddvbsubtitle = "text/vnd.dvb.subtitle";
	case Textvndesmertecthemedescriptor = "text/vnd.esmertec.theme-descriptor";
	case Textvndfamilysearchgedcom = "text/vnd.familysearch.gedcom";
	case Textvndficlabflt = "text/vnd.ficlab.flt";
	case Textvndfly = "text/vnd.fly";
	case Textvndfmiflexstor = "text/vnd.fmi.flexstor";
	case Textvndgml = "text/vnd.gml";
	case Textvndgraphviz = "text/vnd.graphviz";
	case Textvndhans = "text/vnd.hans";
	case Textvndhgl = "text/vnd.hgl";
	case Textvndin3d3dml = "text/vnd.in3d.3dml";
	case Textvndin3dspot = "text/vnd.in3d.spot";
	case TextvndIPTCNewsML = "text/vnd.IPTC.NewsML";
	case TextvndIPTCNITF = "text/vnd.IPTC.NITF";
	case Textvndlatexz = "text/vnd.latex-z";
	case Textvndmotorolareflex = "text/vnd.motorola.reflex";
	case Textvndmsmediapackage = "text/vnd.ms-mediapackage";
	case Textvndnet2phonecommcentercommand = "text/vnd.net2phone.commcenter.command";
	case Textvndradisysmsmlbasiclayout = "text/vnd.radisys.msml-basic-layout";
	case Textvndsenxwarpscript = "text/vnd.senx.warpscript";
	case Textvndsunj2meappdescriptor = "text/vnd.sun.j2me.app-descriptor";
	case Textvndsosi = "text/vnd.sosi";
	case Textvndtrolltechlinguist = "text/vnd.trolltech.linguist";
	case Textvndwapsi = "text/vnd.wap.si";
	case Textvndwapsl = "text/vnd.wap.sl";
	case Textvndwapwml = "text/vnd.wap.wml";
	case Textvndwapwmlscript = "text/vnd.wap.wmlscript";
	case Textvtt = "text/vtt";
	case Textxml = "text/xml";
	case Textxmlexternalparsedentity = "text/xml-external-parsed-entity";
	case Video1dinterleavedparityfec = "video/1d-interleaved-parityfec";
	case Video3gpp = "video/3gpp";
	case Video3gpp2 = "video/3gpp2";
	case Video3gpptt = "video/3gpp-tt";
	case VideoAV1 = "video/AV1";
	case VideoBMPEG = "video/BMPEG";
	case VideoBT656 = "video/BT656";
	case VideoCelB = "video/CelB";
	case VideoDV = "video/DV";
	case Videoencaprtp = "video/encaprtp";
	case Videoexample = "video/example";
	case VideoFFV1 = "video/FFV1";
	case Videoflexfec = "video/flexfec";
	case VideoH261 = "video/H261";
	case VideoH263 = "video/H263";
	case VideoH2631998 = "video/H263-1998";
	case VideoH2632000 = "video/H263-2000";
	case VideoH264 = "video/H264";
	case VideoH264RCDO = "video/H264-RCDO";
	case VideoH264SVC = "video/H264-SVC";
	case VideoH265 = "video/H265";
	case Videoisosegment = "video/iso.segment";
	case VideoJPEG = "video/JPEG";
	case Videojpeg2000 = "video/jpeg2000";
	case Videojxsv = "video/jxsv";
	case Videomj2 = "video/mj2";
	case VideoMP1S = "video/MP1S";
	case VideoMP2P = "video/MP2P";
	case VideoMP2T = "video/MP2T";
	case Videomp4 = "video/mp4";
	case VideoMP4VES = "video/MP4V-ES";
	case VideoMPV = "video/MPV";
	case Videompeg4generic = "video/mpeg4-generic";
	case Videonv = "video/nv";
	case Videoogg = "video/ogg";
	case Videoparityfec = "video/parityfec";
	case Videopointer = "video/pointer";
	case Videoquicktime = "video/quicktime";
	case Videoraptorfec = "video/raptorfec";
	case Videoraw = "video/raw";
	case Videortpencaescm128 = "video/rtp-enc-aescm128";
	case Videortploopback = "video/rtploopback";
	case Videortx = "video/rtx";
	case Videoscip = "video/scip";
	case Videosmpte291 = "video/smpte291";
	case VideoSMPTE292M = "video/SMPTE292M";
	case Videoulpfec = "video/ulpfec";
	case Videovc1 = "video/vc1";
	case Videovc2 = "video/vc2";
	case VideovndCCTV = "video/vnd.CCTV";
	case Videovnddecehd = "video/vnd.dece.hd";
	case Videovnddecemobile = "video/vnd.dece.mobile";
	case Videovnddecemp4 = "video/vnd.dece.mp4";
	case Videovnddecepd = "video/vnd.dece.pd";
	case Videovnddecesd = "video/vnd.dece.sd";
	case Videovnddecevideo = "video/vnd.dece.video";
	case Videovnddirectvmpeg = "video/vnd.directv.mpeg";
	case Videovnddirectvmpegtts = "video/vnd.directv.mpeg-tts";
	case Videovnddlnampegtts = "video/vnd.dlna.mpeg-tts";
	case Videovnddvbfile = "video/vnd.dvb.file";
	case Videovndfvt = "video/vnd.fvt";
	case Videovndhnsvideo = "video/vnd.hns.video";
	case Videovndiptvforum1dparityfec1010 = "video/vnd.iptvforum.1dparityfec-1010";
	case Videovndiptvforum1dparityfec2005 = "video/vnd.iptvforum.1dparityfec-2005";
	case Videovndiptvforum2dparityfec1010 = "video/vnd.iptvforum.2dparityfec-1010";
	case Videovndiptvforum2dparityfec2005 = "video/vnd.iptvforum.2dparityfec-2005";
	case Videovndiptvforumttsavc = "video/vnd.iptvforum.ttsavc";
	case Videovndiptvforumttsmpeg2 = "video/vnd.iptvforum.ttsmpeg2";
	case Videovndmotorolavideo = "video/vnd.motorola.video";
	case Videovndmotorolavideop = "video/vnd.motorola.videop";
	case Videovndmpegurl = "video/vnd.mpegurl";
	case Videovndmsplayreadymediapyv = "video/vnd.ms-playready.media.pyv";
	case Videovndnokiainterleavedmultimedia = "video/vnd.nokia.interleaved-multimedia";
	case Videovndnokiamp4vr = "video/vnd.nokia.mp4vr";
	case Videovndnokiavideovoip = "video/vnd.nokia.videovoip";
	case Videovndobjectvideo = "video/vnd.objectvideo";
	case Videovndradgamettoolsbink = "video/vnd.radgamettools.bink";
	case Videovndradgamettoolssmacker = "video/vnd.radgamettools.smacker";
	case Videovndsealedmpeg1 = "video/vnd.sealed.mpeg1";
	case Videovndsealedmpeg4 = "video/vnd.sealed.mpeg4";
	case Videovndsealedswf = "video/vnd.sealed.swf";
	case Videovndsealedmediasoftsealmov = "video/vnd.sealedmedia.softseal.mov";
	case Videovnduvvump4 = "video/vnd.uvvu.mp4";
	case Videovndyoutubeyt = "video/vnd.youtube.yt";
	case Videovndvivo = "video/vnd.vivo";
	case VideoVP8 = "video/VP8";
	case VideoVP9 = "video/VP9";

	public function getValue(): string
	{
		/**
		 * @var non-empty-string value
		 * @psalm-suppress UndefinedThisPropertyFetch Until vimeo/psalm#6468 is fixed
		 */
		return $this->value;
	}
}
